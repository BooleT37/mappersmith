{"version":3,"sources":["webpack://mappersmith/webpack/universalModuleDefinition","webpack://mappersmith/./src/utils.ts","webpack://mappersmith/./src/method-descriptor.ts","webpack://mappersmith/./src/manifest.ts","webpack://mappersmith/./src/request.ts","webpack://mappersmith/./src/client-builder.ts","webpack://mappersmith/./src/mappersmith.js","webpack://mappersmith/./src/index.js","webpack://mappersmith/./src/gateway/timeout-error.js","webpack://mappersmith/./src/response.ts","webpack://mappersmith/./src/gateway.js","webpack://mappersmith/./src/gateway/xhr.js","webpack://mappersmith/webpack/bootstrap"],"names":["root","factory","exports","module","define","amd","window","_process","getNanoSeconds","loadTime","eval","e","hasProcessHrtime","hrtime","hr","R20","isNeitherNullNorUndefined","x","validKeys","entry","Object","keys","filter","key","buildRecursive","value","suffix","Array","isArray","map","v","join","encodeURIComponent","nestedKey","nestedValue","toQueryString","isPlainObject","replace","performanceNow","undefined","now","Date","parseResponseHeaders","headerStr","headers","headerPairs","split","i","length","headerPair","index","indexOf","substring","toLowerCase","trim","val","lowerCaseObjectKeys","obj","reduce","target","hasOwnProperty","prototype","assign","arguments","source","call","toString","getPrototypeOf","CHARS","btoa","input","charCode","output","str","String","block","idx","charAt","charCodeAt","Error","MethodDescriptor","params","this","allowResourceHostOverride","parameterEncoder","binary","host","method","path","queryParamAlias","authAttr","bodyAttr","headersAttr","hostAttr","timeoutAttr","resourceMiddleware","middleware","middlewares","Manifest","options","gatewayConfigs","context","clientId","resources","clientMiddleware","ignoreGlobalMiddleware","callback","forEach","resourceName","methods","eachMethod","methodName","name","descriptor","createMethodDescriptor","definition","args","resourceMethod","middlewareFactory","defaultDescriptor","__name","response","next","prepareRequest","request","then","req","middlewareParams","REGEXP_DYNAMIC_SEGMENT","REGEXP_OPTIONAL_DYNAMIC_SEGMENT","REGEXP_TRAILING_SLASH","Request","methodDescriptor","requestParams","isParam","originalHost","match","regexp","RegExp","dynamicSegmentKeys","exec","push","pattern","missingDynamicSegmentMatch","aliasedParams","aliased","aliasedKey","queryString","hasQuery","includes","prependSlash","headerAttr","mergedHeaders","extras","authKey","bodyKey","headerKey","hostKey","timeoutKey","auth","body","timeout","ClientBuilder","manifestDefinition","GatewayClassFactory","configs","Promise","manifest","maxMiddlewareStackExecutionAllowed","client","_manifest","eachResource","buildResource","resource","invokeMiddlewares","initialRequest","executeMiddlewareStack","returnedInvalidRequest","requestPhaseFailureContext","abortExecution","error","message","stack","finalRequest","executions","renew","previousValue","currentValue","GatewayClass","execute","createMiddleware","abort","resolve","typeValue","prettyType","reject","version","fetch","gateway","emulateHTTP","enableHTTP408OnTimeouts","XHR","withCredentials","configure","HTTP","useSocketConnectionTimeout","onRequestWillStart","onRequestSocketAssigned","onSocketLookup","onSocketConnect","onSocketSecureConnect","onResponseReadable","onResponseEnd","Fetch","credentials","setContext","console","warn","forge","build","lib","require","defaultGateway","XMLHttpRequest","createTimeoutError","REGEXP_CONTENT_TYPE_JSON","Response","originalRequest","responseStatus","responseData","responseHeaders","errors","maskedAuth","password","enhance","timeElapsed","status","isContentTypeJSON","JSON","parse","contentType","header","test","lastError","enhancedResponse","rawData","REGEXP_EMULATE_HTTP","Gateway","successCallback","failCallback","shouldEmulateHTTP","timeStart","defaultConfigs","apply","dispatchClientError","dispatchResponse","success","prepareBody","_method","bodyString","toBase64","get","xmlHttpRequest","createXHR","open","url","setHeaders","configureTimeout","configureBinary","send","head","post","performRequest","put","patch","isBinary","responseType","canceled","timer","addEventListener","clearTimeout","setTimeout","configureCallbacks","createResponse","errorMessage","enhancedMessage","guessedErrorCause","responseText","xhrOptions","requestMethod","toUpperCase","customHeaders","data","getAllResponseHeaders","username","headerName","setRequestHeader","installedModules","__webpack_require__","m","modules","c","d","getter","o","defineProperty","enumerable","r","Symbol","toStringTag","t","mode","__esModule","ns","create","bind","n","object","property","p","s","moduleId","l"],"mappings":"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","file":"mappersmith.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mappersmith\"] = factory();\n\telse\n\t\troot[\"mappersmith\"] = factory();\n})(window, function() {\nreturn ","import type { Primitive, NestedParam, Hash, NestedParamArray } from './types'\n\nlet _process: NodeJS.Process,\n  getNanoSeconds: (() => number) | undefined,\n  loadTime: number | undefined\n\ntry {\n  // eslint-disable-next-line no-eval\n  _process = eval(\n    'typeof __TEST_WEB__ === \"undefined\" && typeof process === \"object\" ? process : undefined'\n  )\n} catch (e) {} // eslint-disable-line no-empty\n\nconst hasProcessHrtime = () => {\n  return typeof _process !== 'undefined' && _process !== null && _process.hrtime\n}\n\nif (hasProcessHrtime()) {\n  getNanoSeconds = () => {\n    const hr = _process.hrtime()\n    return hr[0] * 1e9 + hr[1]\n  }\n  loadTime = getNanoSeconds()\n}\n\nconst R20 = /%20/g\n\nconst isNeitherNullNorUndefined = <T>(x: T | undefined | null): x is T =>\n  x !== null && x !== undefined\n\nexport const validKeys = (entry: Record<string, unknown>) =>\n  Object.keys(entry).filter((key) => isNeitherNullNorUndefined(entry[key]))\n\nexport const buildRecursive = (\n  key: string,\n  value: Primitive | NestedParam | NestedParamArray,\n  suffix = ''\n): string => {\n  if (Array.isArray(value)) {\n    return value.map((v) => buildRecursive(key, v, suffix + '[]')).join('&')\n  }\n\n  if (typeof value !== 'object') {\n    return `${encodeURIComponent(key + suffix)}=${encodeURIComponent(value)}`\n  }\n\n  return Object.keys(value)\n    .map((nestedKey) => {\n      const nestedValue = value[nestedKey]\n      if (isNeitherNullNorUndefined(nestedValue)) {\n        return buildRecursive(key, nestedValue, suffix + '[' + nestedKey + ']')\n      }\n      return null\n    })\n    .filter(isNeitherNullNorUndefined)\n    .join('&')\n}\n\nexport const toQueryString = (entry: undefined | null | Primitive | NestedParam) => {\n  if (!isPlainObject(entry)) {\n    return entry\n  }\n\n  return Object.keys(entry)\n    .map((key) => {\n      const value = entry[key]\n      if (isNeitherNullNorUndefined(value)) {\n        return buildRecursive(key, value)\n      }\n      return null\n    })\n    .filter(isNeitherNullNorUndefined)\n    .join('&')\n    .replace(R20, '+')\n}\n\n/**\n * Gives time in milliseconds, but with sub-millisecond precision for Browser\n * and Nodejs\n */\nexport const performanceNow = () => {\n  if (hasProcessHrtime() && getNanoSeconds !== undefined) {\n    const now = getNanoSeconds()\n    if (now !== undefined && loadTime !== undefined) {\n      return (now - loadTime) / 1e6\n    }\n  }\n\n  return Date.now()\n}\n\n/**\n * borrowed from: {@link https://gist.github.com/monsur/706839}\n * XmlHttpRequest's getAllResponseHeaders() method returns a string of response\n * headers according to the format described here:\n * {@link http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders-method}\n * This method parses that string into a user-friendly key/value pair object.\n */\nexport const parseResponseHeaders = (headerStr: string) => {\n  const headers: Hash = {}\n  if (!headerStr) {\n    return headers\n  }\n\n  const headerPairs = headerStr.split('\\u000d\\u000a')\n  for (let i = 0; i < headerPairs.length; i++) {\n    const headerPair = headerPairs[i]\n    // Can't use split() here because it does the wrong thing\n    // if the header value has the string \": \" in it.\n    const index = headerPair.indexOf('\\u003a\\u0020')\n    if (index > 0) {\n      const key = headerPair.substring(0, index).toLowerCase().trim()\n      const val = headerPair.substring(index + 2).trim()\n      headers[key] = val\n    }\n  }\n  return headers\n}\n\nexport const lowerCaseObjectKeys = (obj: Hash) => {\n  return Object.keys(obj).reduce((target, key) => {\n    target[key.toLowerCase()] = obj[key]\n    return target\n  }, {} as Hash)\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nexport const assign =\n  Object.assign ||\n  function (target: Hash) {\n    for (let i = 1; i < arguments.length; i++) {\n      // eslint-disable-next-line prefer-rest-params\n      const source = arguments[i]\n      for (const key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          target[key] = source[key]\n        }\n      }\n    }\n    return target\n  }\n\nconst toString = Object.prototype.toString\nexport const isPlainObject = (value: unknown): value is object => {\n  return (\n    toString.call(value) === '[object Object]' &&\n    Object.getPrototypeOf(value) === Object.getPrototypeOf({})\n  )\n}\n\n/**\n * borrowed from: {@link https://github.com/davidchambers/Base64.js}\n */\nconst CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\nexport const btoa = (input: object | Primitive | null) => {\n  let output = ''\n  let map = CHARS\n  const str = String(input)\n  for (\n    // initialize result and counter\n    let block = 0, charCode: number, idx = 0;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || ((map = '='), idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & (block >> (8 - (idx % 1) * 8)))\n  ) {\n    charCode = str.charCodeAt((idx += 3 / 4))\n    if (charCode > 0xff) {\n      throw new Error(\n        \"[Mappersmith] 'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\"\n      )\n    }\n    block = (block << 8) | charCode\n  }\n  return output\n}\n","import type { Headers, RequestParams, ParameterEncoderFn, Params } from './types'\nimport type { Middleware } from './middleware'\n\nexport interface MethodDescriptorParams {\n  allowResourceHostOverride?: boolean\n  parameterEncoder?: ParameterEncoderFn\n  authAttr?: string\n  binary?: boolean\n  bodyAttr?: string\n  headers?: Headers\n  headersAttr?: string\n  host: string\n  hostAttr?: string\n  method?: string\n  middleware?: Array<Middleware>\n  middlewares?: Array<Middleware>\n  params?: Params\n  path: string | ((args: RequestParams) => string)\n  queryParamAlias?: Record<string, string>\n  timeoutAttr?: string\n}\n\n/**\n * @typedef MethodDescriptor\n * @param {MethodDescriptorParams} params\n *   @param {boolean} params.allowResourceHostOverride\n *   @param {Function} params.parameterEncoder\n *   @param {String} params.authAttr - auth attribute name. Default: 'auth'\n *   @param {boolean} params.binary\n *   @param {String} params.bodyAttr - body attribute name. Default: 'body'\n *   @param {Headers} params.headers\n *   @param {String} params.headersAttr - headers attribute name. Default: 'headers'\n *   @param {String} params.host\n *   @param {String} params.hostAttr - host attribute name. Default: 'host'\n *   @param {String} params.method\n *   @param {Middleware[]} params.middleware\n *   @param {Middleware[]} params.middlewares - alias for middleware\n *   @param {RequestParams} params.params\n *   @param {String|Function} params.path\n *   @param {Object} params.queryParamAlias\n *   @param {Number} params.timeoutAttr - timeout attribute name. Default: 'timeout'\n */\nexport class MethodDescriptor {\n  public readonly allowResourceHostOverride: boolean\n  public readonly parameterEncoder: ParameterEncoderFn\n  public readonly authAttr: string\n  public readonly binary: boolean\n  public readonly bodyAttr: string\n  public readonly headers?: Headers\n  public readonly headersAttr: string\n  public readonly host: string\n  public readonly hostAttr: string\n  public readonly method: string\n  public readonly middleware: Middleware[]\n  public readonly params?: RequestParams\n  public readonly path: string | ((args: RequestParams) => string)\n  public readonly queryParamAlias: Record<string, string>\n  public readonly timeoutAttr: string\n\n  constructor(params: MethodDescriptorParams) {\n    this.allowResourceHostOverride = params.allowResourceHostOverride || false\n    this.parameterEncoder = params.parameterEncoder || encodeURIComponent\n    this.binary = params.binary || false\n    this.headers = params.headers\n    this.host = params.host\n    this.method = params.method || 'get'\n    this.params = params.params\n    this.path = params.path\n    this.queryParamAlias = params.queryParamAlias || {}\n\n    this.authAttr = params.authAttr || 'auth'\n    this.bodyAttr = params.bodyAttr || 'body'\n    this.headersAttr = params.headersAttr || 'headers'\n    this.hostAttr = params.hostAttr || 'host'\n    this.timeoutAttr = params.timeoutAttr || 'timeout'\n\n    const resourceMiddleware = params.middleware || params.middlewares || []\n    this.middleware = resourceMiddleware\n  }\n}\n\nexport default MethodDescriptor\n","import { MethodDescriptor, MethodDescriptorParams } from './method-descriptor'\nimport { assign } from './utils'\nimport type { ParameterEncoderFn } from './types'\nimport type { Gateway, GatewayConfiguration } from './gateway/types'\nimport { Context, Middleware, MiddlewareDescriptor, MiddlewareParams } from './middleware'\n\nexport interface GlobalConfigs {\n  context: Context\n  middleware: Middleware[]\n  Promise: PromiseConstructor | null\n  fetch: typeof fetch | null\n  gateway: Gateway | null\n  gatewayConfigs: Partial<GatewayConfiguration>\n  maxMiddlewareStackExecutionAllowed: number\n}\n\nexport type ResourceTypeConstraint = {\n  [resourceName: string]: {\n    [methodName: string]: Omit<MethodDescriptorParams, 'host'> & { host?: string }\n  }\n}\n\nexport interface ManifestOptions<Resources extends ResourceTypeConstraint> {\n  host: string\n  allowResourceHostOverride?: boolean\n  parameterEncoder?: ParameterEncoderFn\n  bodyAttr?: string\n  headersAttr?: string\n  authAttr?: string\n  timeoutAttr?: string\n  hostAttr?: string\n  clientId?: string\n  gatewayConfigs?: Partial<GatewayConfiguration>\n  resources?: Resources\n  middleware?: Middleware[]\n  /**\n   * @deprecated - use `middleware` instead\n   */\n  middlewares?: Middleware[]\n  ignoreGlobalMiddleware?: boolean\n}\n\nexport type Method = { name: string; descriptor: MethodDescriptor }\ntype EachResourceCallbackFn = (name: string, methods: Method[]) => void\ntype EachMethodCallbackFn = (name: string) => Method\ntype CreateMiddlewareParams = Partial<Omit<MiddlewareParams, 'resourceName' | 'resourceMethod'>> &\n  Pick<MiddlewareParams, 'resourceName' | 'resourceMethod'>\n/**\n * @typedef Manifest\n * @param {Object} obj\n *   @param {Object} obj.gatewayConfigs - default: base values from mappersmith\n *   @param {Object} obj.ignoreGlobalMiddleware - default: false\n *   @param {Object} obj.resources - default: {}\n *   @param {Array}  obj.middleware or obj.middlewares - default: []\n * @param {Object} globalConfigs\n */\nexport class Manifest<Resources extends ResourceTypeConstraint> {\n  public host: string\n  public allowResourceHostOverride: boolean\n  public parameterEncoder: ParameterEncoderFn\n  public bodyAttr?: string\n  public headersAttr?: string\n  public authAttr?: string\n  public timeoutAttr?: string\n  public hostAttr?: string\n  public clientId: string | null\n  public gatewayConfigs: Partial<GatewayConfiguration>\n  public resources: Resources\n  public context: Context\n  public middleware: Middleware[]\n\n  constructor(\n    options: ManifestOptions<Resources>,\n    { gatewayConfigs, middleware = [], context = {} }: GlobalConfigs\n  ) {\n    this.host = options.host\n    this.allowResourceHostOverride = options.allowResourceHostOverride || false\n    this.parameterEncoder = options.parameterEncoder || encodeURIComponent\n    this.bodyAttr = options.bodyAttr\n    this.headersAttr = options.headersAttr\n    this.authAttr = options.authAttr\n    this.timeoutAttr = options.timeoutAttr\n    this.hostAttr = options.hostAttr\n    this.clientId = options.clientId || null\n    this.gatewayConfigs = assign({}, gatewayConfigs, options.gatewayConfigs)\n    this.resources = options.resources || ({} as Resources)\n    this.context = context\n\n    // TODO: deprecate obj.middlewares in favor of obj.middleware\n    const clientMiddleware = options.middleware || options.middlewares || []\n\n    if (options.ignoreGlobalMiddleware) {\n      this.middleware = clientMiddleware\n    } else {\n      this.middleware = [...clientMiddleware, ...middleware]\n    }\n  }\n\n  public eachResource(callback: EachResourceCallbackFn) {\n    Object.keys(this.resources).forEach((resourceName) => {\n      const methods = this.eachMethod(resourceName, (methodName) => ({\n        name: methodName,\n        descriptor: this.createMethodDescriptor(resourceName, methodName),\n      }))\n\n      callback(resourceName, methods)\n    })\n  }\n\n  private eachMethod(resourceName: string, callback: EachMethodCallbackFn) {\n    return Object.keys(this.resources[resourceName]).map(callback)\n  }\n\n  public createMethodDescriptor(resourceName: string, methodName: string) {\n    const definition = this.resources[resourceName][methodName]\n\n    if (!definition || !definition.path) {\n      throw new Error(\n        `[Mappersmith] path is undefined for resource \"${resourceName}\" method \"${methodName}\"`\n      )\n    }\n\n    return new MethodDescriptor(\n      assign(\n        {\n          host: this.host,\n          allowResourceHostOverride: this.allowResourceHostOverride,\n          parameterEncoder: this.parameterEncoder,\n          bodyAttr: this.bodyAttr,\n          headersAttr: this.headersAttr,\n          authAttr: this.authAttr,\n          timeoutAttr: this.timeoutAttr,\n          hostAttr: this.hostAttr,\n        },\n        definition\n      )\n    )\n  }\n\n  /**\n   * @param {Object} args\n   *   @param {String|Null} args.clientId\n   *   @param {String} args.resourceName\n   *   @param {String} args.resourceMethod\n   *   @param {Object} args.context\n   *   @param {Boolean} args.mockRequest\n   *\n   * @return {Array<Object>}\n   */\n  public createMiddleware(args: CreateMiddlewareParams) {\n    const createInstance = (middlewareFactory: Middleware) => {\n      const defaultDescriptor: MiddlewareDescriptor = {\n        __name: middlewareFactory.name || middlewareFactory.toString(),\n        response(next) {\n          return next()\n        },\n        /**\n         * @since 2.27.0\n         * Replaced the request method\n         */\n        prepareRequest(next) {\n          return this.request ? next().then((req) => this.request?.(req)) : next()\n        },\n      }\n\n      const middlewareParams = assign(args, {\n        clientId: this.clientId,\n        context: assign({}, this.context),\n      })\n\n      return assign(defaultDescriptor, middlewareFactory(middlewareParams))\n    }\n\n    const { resourceName: name, resourceMethod: method } = args\n    const resourceMiddleware = this.createMethodDescriptor(name, method).middleware\n    const middlewares = [...resourceMiddleware, ...this.middleware]\n\n    return middlewares.map(createInstance)\n  }\n}\n\nexport default Manifest\n","import { MethodDescriptor } from './method-descriptor'\nimport { toQueryString, lowerCaseObjectKeys, assign } from './utils'\nimport type { Headers, NestedParam, NestedParamArray, Primitive, RequestParams } from './types'\n\nconst REGEXP_DYNAMIC_SEGMENT = /{([^}?]+)\\??}/\nconst REGEXP_OPTIONAL_DYNAMIC_SEGMENT = /\\/?{([^}?]+)\\?}/g\nconst REGEXP_TRAILING_SLASH = /\\/$/\n\n/**\n * Removes the object type without removing Record types in the union\n */\ntype ExcludeObject<T> = T extends object ? (object extends T ? never : T) : T\n\n/**\n * @typedef Request\n * @param {MethodDescriptor} methodDescriptor\n * @param {RequestParams} requestParams, defaults to an empty object ({})\n */\nexport class Request {\n  public methodDescriptor: MethodDescriptor\n  public requestParams: RequestParams\n\n  constructor(methodDescriptor: MethodDescriptor, requestParams: RequestParams = {}) {\n    this.methodDescriptor = methodDescriptor\n    this.requestParams = requestParams\n  }\n\n  private isParam(key: string) {\n    return (\n      key !== this.methodDescriptor.headersAttr &&\n      key !== this.methodDescriptor.bodyAttr &&\n      key !== this.methodDescriptor.authAttr &&\n      key !== this.methodDescriptor.timeoutAttr &&\n      key !== this.methodDescriptor.hostAttr\n    )\n  }\n\n  public params() {\n    const params = assign({}, this.methodDescriptor.params, this.requestParams)\n\n    return Object.keys(params).reduce((obj, key) => {\n      if (this.isParam(key)) {\n        obj[key] = params[key]\n      }\n      return obj\n    }, {} as RequestParams)\n  }\n\n  /**\n   * Returns the HTTP method in lowercase\n   */\n  public method() {\n    return this.methodDescriptor.method.toLowerCase()\n  }\n\n  /**\n   * Returns host name without trailing slash\n   * Example: 'http://example.org'\n   */\n  public host() {\n    const { allowResourceHostOverride, hostAttr, host } = this.methodDescriptor\n    const originalHost = allowResourceHostOverride\n      ? this.requestParams[hostAttr] || host || ''\n      : host || ''\n\n    if (typeof originalHost === 'string') {\n      return originalHost.replace(REGEXP_TRAILING_SLASH, '')\n    }\n\n    return ''\n  }\n\n  /**\n   * Returns path with parameters and leading slash.\n   * Example: '/some/path?param1=true'\n   *\n   * @throws {Error} if any dynamic segment is missing.\n   * Example:\n   *  Imagine the path '/some/{name}', the error will be similar to:\n   *    '[Mappersmith] required parameter missing (name), \"/some/{name}\" cannot be resolved'\n   */\n  public path() {\n    const params = this.params()\n\n    let path\n\n    if (typeof this.methodDescriptor.path === 'function') {\n      path = this.methodDescriptor.path(params)\n    } else {\n      path = this.methodDescriptor.path\n    }\n\n    if (path[0] !== '/') {\n      path = `/${path}`\n    }\n\n    // RegExp with 'g'-flag is stateful, therefore defining it locally\n    const regexp = new RegExp(REGEXP_DYNAMIC_SEGMENT, 'g')\n\n    const dynamicSegmentKeys = []\n    let match\n    while ((match = regexp.exec(path)) !== null) {\n      dynamicSegmentKeys.push(match[1])\n    }\n\n    for (const key of dynamicSegmentKeys) {\n      const pattern = new RegExp(`{${key}\\\\??}`, 'g')\n      const value = params[key]\n      if (value != null && typeof value !== 'object') {\n        path = path.replace(pattern, this.methodDescriptor.parameterEncoder(value))\n        delete params[key]\n      }\n    }\n\n    path = path.replace(REGEXP_OPTIONAL_DYNAMIC_SEGMENT, '')\n\n    const missingDynamicSegmentMatch = path.match(REGEXP_DYNAMIC_SEGMENT)\n    if (missingDynamicSegmentMatch) {\n      throw new Error(\n        `[Mappersmith] required parameter missing (${missingDynamicSegmentMatch[1]}), \"${path}\" cannot be resolved`\n      )\n    }\n\n    const aliasedParams = Object.keys(params).reduce((aliased, key) => {\n      const aliasedKey = this.methodDescriptor.queryParamAlias[key] || key\n      const value = params[key]\n      if (value != null) {\n        /**\n         * Here we use `ExcludeObject` to surgically remove the `object` type from `value`.\n         * We need it as `object` is too broad to be useful, whereas `value` is also typed\n         * as NestedParam, which is the correct shape for param objects.\n         */\n        aliased[aliasedKey] = value as ExcludeObject<typeof value>\n      }\n      return aliased\n    }, {} as Record<string, Primitive | NestedParam | NestedParamArray>)\n\n    const queryString = toQueryString(aliasedParams)\n    if (typeof queryString === 'string' && queryString.length !== 0) {\n      const hasQuery = path.includes('?')\n      path += `${hasQuery ? '&' : '?'}${queryString}`\n    }\n\n    return path\n  }\n\n  /**\n   * Returns the template path, without params, before interpolation.\n   * If path is a function, returns the result of request.path()\n   * Example: '/some/{param}/path'\n   */\n  public pathTemplate() {\n    const path = this.methodDescriptor.path\n\n    const prependSlash = (str: string) => (str[0] !== '/' ? `/${str}` : str)\n\n    if (typeof path === 'function') {\n      return prependSlash(path(this.params()))\n    }\n\n    return prependSlash(path)\n  }\n\n  /**\n   * Returns the full URL\n   * Example: http://example.org/some/path?param1=true\n   *\n   */\n  public url() {\n    return `${this.host()}${this.path()}`\n  }\n\n  /**\n   * Returns an object with the headers. Header names are converted to\n   * lowercase\n   */\n  public headers() {\n    const headerAttr = this.methodDescriptor.headersAttr\n    const headers = (this.requestParams[headerAttr] || {}) as Headers\n    const mergedHeaders = { ...this.methodDescriptor.headers, ...headers } as Headers\n    return lowerCaseObjectKeys(mergedHeaders)\n  }\n\n  /**\n   * Utility method to get a header value by name\n   */\n  public header(name: string) {\n    return this.headers()[name.toLowerCase()]\n  }\n\n  public body() {\n    return this.requestParams[this.methodDescriptor.bodyAttr]\n  }\n\n  public auth() {\n    return this.requestParams[this.methodDescriptor.authAttr]\n  }\n\n  public timeout() {\n    return this.requestParams[this.methodDescriptor.timeoutAttr]\n  }\n\n  /**\n   * Enhances current request returning a new Request\n   * @param {RequestParams} extras\n   *   @param {Object} extras.auth - it will replace the current auth\n   *   @param {String|Object} extras.body - it will replace the current body\n   *   @param {Headers} extras.headers - it will be merged with current headers\n   *   @param {String} extras.host - it will replace the current timeout\n   *   @param {RequestParams} extras.params - it will be merged with current params\n   *   @param {Number} extras.timeout - it will replace the current timeout\n   */\n  public enhance(extras: RequestParams) {\n    const authKey = this.methodDescriptor.authAttr\n    const bodyKey = this.methodDescriptor.bodyAttr\n    const headerKey = this.methodDescriptor.headersAttr\n    const hostKey = this.methodDescriptor.hostAttr\n    const timeoutKey = this.methodDescriptor.timeoutAttr\n\n    // Note: The result of merging an instance of RequestParams with instance of Params\n    // is simply a RequestParams with even more [param: string]'s on it.\n    const requestParams: RequestParams = assign({}, this.requestParams, extras.params)\n\n    const headers = this.requestParams[headerKey] as Headers | undefined\n    const mergedHeaders = assign({}, headers, extras.headers)\n    requestParams[headerKey] = mergedHeaders\n\n    extras.auth && (requestParams[authKey] = extras.auth)\n    extras.body && (requestParams[bodyKey] = extras.body)\n    extras.host && (requestParams[hostKey] = extras.host)\n    extras.timeout && (requestParams[timeoutKey] = extras.timeout)\n\n    return new Request(this.methodDescriptor, requestParams)\n  }\n\n  /**\n   * Is the request expecting a binary response?\n   */\n  public isBinary() {\n    return this.methodDescriptor.binary\n  }\n}\n\nexport default Request\n","import {\n  Manifest,\n  ManifestOptions,\n  GlobalConfigs,\n  Method,\n  ResourceTypeConstraint,\n} from './manifest'\nimport { Response } from './response'\nimport { Request } from './request'\nimport type { MiddlewareDescriptor, RequestGetter, ResponseGetter } from './middleware'\nimport type { Gateway, GatewayConfiguration } from './gateway/types'\nimport type { Params } from './types'\n\nexport type AsyncFunction = (params?: Params) => Promise<Response>\n\nexport type AsyncFunctions<HashType> = {\n  [Key in keyof HashType]: AsyncFunction\n}\n\nexport type Client<ResourcesType> = {\n  [ResourceKey in keyof ResourcesType]: AsyncFunctions<ResourcesType[ResourceKey]>\n}\n\ninterface RequestPhaseFailureContext {\n  middleware: string | null\n  returnedInvalidRequest: boolean\n  abortExecution: boolean\n}\n\nexport interface GatewayConstructor {\n  new (request: Request, gatewayConfigs: Partial<GatewayConfiguration>): Gateway\n  readonly prototype: Gateway\n}\n\n/**\n * @typedef ClientBuilder\n * @param {Object} manifestDefinition - manifest definition with at least the `resources` key\n * @param {Function} GatewayClassFactory - factory function that returns a gateway class\n */\nexport class ClientBuilder<Resources extends ResourceTypeConstraint> {\n  public Promise: PromiseConstructor\n  public manifest: Manifest<Resources>\n  public GatewayClassFactory: () => GatewayConstructor\n  public maxMiddlewareStackExecutionAllowed: number\n\n  constructor(\n    manifestDefinition: ManifestOptions<Resources>,\n    GatewayClassFactory: () => GatewayConstructor,\n    configs: GlobalConfigs\n  ) {\n    if (!manifestDefinition) {\n      throw new Error(`[Mappersmith] invalid manifest (${manifestDefinition})`)\n    }\n\n    if (!GatewayClassFactory || !GatewayClassFactory()) {\n      throw new Error('[Mappersmith] gateway class not configured (configs.gateway)')\n    }\n\n    if (!configs.Promise) {\n      throw new Error('[Mappersmith] Promise not configured (configs.Promise)')\n    }\n\n    this.Promise = configs.Promise\n    this.manifest = new Manifest(manifestDefinition, configs)\n    this.GatewayClassFactory = GatewayClassFactory\n    this.maxMiddlewareStackExecutionAllowed = configs.maxMiddlewareStackExecutionAllowed\n  }\n\n  public build() {\n    const client: Client<Resources> = { _manifest: this.manifest } as never\n\n    this.manifest.eachResource((resourceName: keyof Resources, methods) => {\n      client[resourceName] = this.buildResource(resourceName, methods)\n    })\n\n    return client\n  }\n\n  private buildResource<T, K extends keyof T = keyof T>(resourceName: K, methods: Method[]) {\n    type Resource = AsyncFunctions<T[K]>\n    const initialResourceValue: Partial<Resource> = {}\n\n    const resource = methods.reduce((resource, method) => {\n      const resourceMethod = (requestParams: Params) => {\n        const request = new Request(method.descriptor, requestParams)\n        // `resourceName` can be `PropertyKey`, making this `string | number | Symbol`, therefore the string conversion\n        // to stop type bleeding.\n        return this.invokeMiddlewares(String(resourceName), method.name, request)\n      }\n      return {\n        ...resource,\n        [method.name]: resourceMethod,\n      }\n    }, initialResourceValue)\n\n    // @hint: This type assert is needed as the compiler cannot be made to understand that the reduce produce a\n    // non-partial result on a partial input. This is due to a shortcoming of the type signature for Array<T>.reduce().\n    // @link: https://github.com/microsoft/TypeScript/blob/v3.7.2/lib/lib.es5.d.ts#L1186\n    return resource as Resource\n  }\n\n  private invokeMiddlewares(resourceName: string, resourceMethod: string, initialRequest: Request) {\n    const middleware = this.manifest.createMiddleware({ resourceName, resourceMethod })\n    const GatewayClass = this.GatewayClassFactory()\n    const gatewayConfigs = this.manifest.gatewayConfigs\n    const requestPhaseFailureContext: RequestPhaseFailureContext = {\n      middleware: null,\n      returnedInvalidRequest: false,\n      abortExecution: false,\n    }\n\n    const getInitialRequest = () => this.Promise.resolve(initialRequest)\n    const chainRequestPhase = (next: RequestGetter, middleware: MiddlewareDescriptor) => () => {\n      const abort = (error: Error) => {\n        requestPhaseFailureContext.abortExecution = true\n        throw error\n      }\n\n      return this.Promise.resolve()\n        .then(() => middleware.prepareRequest(next, abort))\n        .then((request: unknown) => {\n          if (request instanceof Request) {\n            return request\n          }\n\n          // FIXME: Here be dragons: prepareRequest is typed as Promise<Response | void>\n          // but this code clearly expects it can be something else... anything.\n          // Hence manual cast to `unknown` above.\n          requestPhaseFailureContext.returnedInvalidRequest = true\n          const typeValue = typeof request\n          const prettyType =\n            typeValue === 'object' || typeValue === 'function'\n              ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                (request as any).name || typeValue\n              : typeValue\n\n          throw new Error(\n            `[Mappersmith] middleware \"${middleware.__name}\" should return \"Request\" but returned \"${prettyType}\"`\n          )\n        })\n        .catch((e) => {\n          requestPhaseFailureContext.middleware = middleware.__name || null\n          throw e\n        })\n    }\n\n    const prepareRequest = middleware.reduce(chainRequestPhase, getInitialRequest)\n    let executions = 0\n\n    const executeMiddlewareStack = () =>\n      prepareRequest()\n        .catch((e) => {\n          const { returnedInvalidRequest, abortExecution, middleware } = requestPhaseFailureContext\n          if (returnedInvalidRequest || abortExecution) {\n            throw e\n          }\n\n          const error = new Error(\n            `[Mappersmith] middleware \"${middleware}\" failed in the request phase: ${e.message}`\n          )\n          error.stack = e.stack\n          throw error\n        })\n        .then((finalRequest) => {\n          executions++\n\n          if (executions > this.maxMiddlewareStackExecutionAllowed) {\n            throw new Error(\n              `[Mappersmith] infinite loop detected (middleware stack invoked ${executions} times). Check the use of \"renew\" in one of the middleware.`\n            )\n          }\n\n          const renew = executeMiddlewareStack\n          const chainResponsePhase =\n            (previousValue: ResponseGetter, currentValue: MiddlewareDescriptor) => () => {\n              // Deliberately putting this on two separate lines - to get typescript to not return \"any\"\n              const nextValue = currentValue.response(previousValue, renew)\n              return nextValue\n            }\n          const callGateway = () => new GatewayClass(finalRequest, gatewayConfigs).call()\n          const execute = middleware.reduce(chainResponsePhase, callGateway)\n          return execute()\n        })\n\n    return new this.Promise<Response>((resolve, reject) => {\n      executeMiddlewareStack()\n        .then((response) => resolve(response))\n        .catch(reject)\n    })\n  }\n}\n\nexport default ClientBuilder\n","/* global VERSION */\nimport ClientBuilder from './client-builder'\nimport { assign } from './utils'\n\nexport const version = VERSION\n\nexport const configs = {\n  context: {},\n  middleware: [],\n  Promise: typeof Promise === 'function' ? Promise : null,\n  fetch: typeof fetch === 'function' ? fetch : null,\n\n  /**\n   * The maximum amount of executions allowed before it is considered an infinite loop.\n   * In the response phase of middleware, it's possible to execute a function called \"renew\",\n   * which can be used to rerun the middleware stack. This feature is useful in some scenarios,\n   * for example, re-fetching an invalid access token.\n\n   * This configuration is used to detect infinite loops, don't increase this value too much\n   * @default 2\n   */\n  maxMiddlewareStackExecutionAllowed: 2,\n\n  /**\n   * Gateway implementation, it defaults to \"lib/gateway/xhr\" for browsers and\n   * \"lib/gateway/http\" for node\n   */\n  gateway: null,\n  gatewayConfigs: {\n    /**\n     * Setting this option will fake PUT, PATCH and DELETE requests with a HTTP POST. It will\n     * add \"_method\" and \"X-HTTP-Method-Override\" with the original requested method\n     * @default false\n     */\n    emulateHTTP: false,\n\n    /**\n     * Setting this option will return HTTP status 408 (Request Timeout) when a request times\n     * out. When \"false\", HTTP status 400 (Bad Request) will be used instead.\n     * @default false\n     */\n    enableHTTP408OnTimeouts: false,\n\n    XHR: {\n      /**\n       * Indicates whether or not cross-site Access-Control requests should be made using credentials\n       * such as cookies, authorization headers or TLS client certificates.\n       * Setting withCredentials has no effect on same-site requests\n       *\n       * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n       *\n       * @default false\n       */\n      withCredentials: false,\n\n      /**\n       * For additional configurations to the XMLHttpRequest object.\n       * @param {XMLHttpRequest} xhr\n       * @default null\n       */\n      configure: null,\n    },\n\n    HTTP: {\n      /**\n       * Enable this option to evaluate timeout on entire request durations,\n       * including DNS resolution and socket connection.\n       *\n       * See original nodejs issue: https://github.com/nodejs/node/pull/8101\n       *\n       * @default false\n       */\n      useSocketConnectionTimeout: false,\n      /**\n       * For additional configurations to the http/https module\n       * For http: https://nodejs.org/api/http.html#http_http_request_options_callback\n       * For https: https://nodejs.org/api/https.html#https_https_request_options_callback\n       *\n       * @param {object} options\n       * @default null\n       */\n      configure: null,\n      onRequestWillStart: null,\n      onRequestSocketAssigned: null,\n      onSocketLookup: null,\n      onSocketConnect: null,\n      onSocketSecureConnect: null,\n      onResponseReadable: null,\n      onResponseEnd: null,\n    },\n\n    Fetch: {\n      /**\n       * Indicates whether the user agent should send cookies from the other domain in the case of cross-origin\n       * requests. This is similar to XHR’s withCredentials flag, but with three available values (instead of two):\n       *\n       * \"omit\": Never send cookies.\n       * \"same-origin\": Only send cookies if the URL is on the same origin as the calling script.\n       * \"include\": Always send cookies, even for cross-origin calls.\n       *\n       * https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials\n       *\n       * @default \"omit\"\n       */\n      credentials: 'omit',\n    },\n  },\n}\n\n/**\n * @deprecated Shouldn't be used, not safe for concurrent use.\n * @param {Object} context\n */\nexport const setContext = (context) => {\n  console.warn(\n    'The use of setContext is deprecated - you need to find another way to pass data between your middlewares.'\n  )\n  configs.context = assign(configs.context, context)\n}\n\n/**\n * @param {Object} manifest\n */\nexport default function forge(manifest) {\n  const GatewayClassFactory = () => configs.gateway\n  return new ClientBuilder(manifest, GatewayClassFactory, configs).build()\n}\n","/* eslint-disable @typescript-eslint/no-var-requires */\nvar lib = require('./mappersmith')\nvar _process, defaultGateway\n\n// Prevents webpack to load the nodejs processs polyfill\ntry {\n  // eslint-disable-next-line no-eval\n  _process = eval('typeof process === \"object\" ? process : undefined')\n} catch (e) {} // eslint-disable-line no-empty\n\nif (typeof XMLHttpRequest !== 'undefined') {\n  // For browsers use XHR adapter\n  defaultGateway = require('./gateway/xhr').default\n} else if (typeof _process !== 'undefined') {\n  // For node use HTTP adapter\n  defaultGateway = require('./gateway/http').default\n}\n\nlib.configs.gateway = defaultGateway\nmodule.exports = lib\n","export const isTimeoutError = (e) => {\n  return e && e.name === 'TimeoutError'\n}\n\nexport const createTimeoutError = (message) => {\n  const error = new Error(message)\n  error.name = 'TimeoutError'\n  return error\n}\n","import { lowerCaseObjectKeys } from './utils'\nimport { Request } from './request'\nimport type { Headers } from './types'\n\nconst REGEXP_CONTENT_TYPE_JSON = /^application\\/(json|.*\\+json)/\n\nexport interface ResponseParams {\n  readonly status?: number\n  readonly rawData?: string\n  readonly headers?: Headers\n  readonly error?: Error\n}\n\n/**\n * @typedef Response\n * @param {Request} originalRequest, for auth it hides the password\n * @param {Integer} responseStatus\n * @param {String} responseData, defaults to null\n * @param {Object} responseHeaders, defaults to an empty object ({})\n * @param {Array<Error>} errors, defaults to an empty array ([])\n */\nexport class Response {\n  public readonly originalRequest: Request\n  public readonly responseStatus: number\n  public readonly responseData: string | null\n  public readonly responseHeaders: Headers\n  public readonly errors: Array<Error | string>\n  public timeElapsed: number | null\n\n  constructor(\n    originalRequest: Request,\n    responseStatus: number,\n    responseData?: string,\n    responseHeaders?: Headers,\n    errors?: Array<Error | string>\n  ) {\n    const auth = originalRequest.requestParams && originalRequest.requestParams.auth\n    if (auth) {\n      const maskedAuth = { ...auth, password: '***' }\n      this.originalRequest = originalRequest.enhance({ auth: maskedAuth })\n    } else {\n      this.originalRequest = originalRequest\n    }\n\n    this.responseStatus = responseStatus\n    this.responseData = responseData !== undefined ? responseData : null\n    this.responseHeaders = responseHeaders || {}\n    this.errors = errors || []\n    this.timeElapsed = null\n  }\n\n  public request() {\n    return this.originalRequest\n  }\n\n  public status() {\n    // IE sends 1223 instead of 204\n    if (this.responseStatus === 1223) {\n      return 204\n    }\n\n    return this.responseStatus\n  }\n\n  /**\n   * Returns true if status is greater or equal 200 or lower than 400\n   */\n  public success() {\n    const status = this.status()\n    return status >= 200 && status < 400\n  }\n\n  /**\n   * Returns an object with the headers. Header names are converted to\n   * lowercase\n   */\n  public headers() {\n    return lowerCaseObjectKeys(this.responseHeaders)\n  }\n\n  /**\n   * Utility method to get a header value by name\n   */\n  public header<T extends string | number | boolean>(name: string): T | undefined {\n    const key = name.toLowerCase()\n\n    if (key in this.headers()) {\n      return this.headers()[key] as T\n    }\n\n    return undefined\n  }\n\n  /**\n   * Returns the original response data\n   */\n  public rawData() {\n    return this.responseData\n  }\n\n  /**\n   * Returns the response data, if \"Content-Type\" is \"application/json\"\n   * it parses the response and returns an object.\n   * Friendly reminder:\n   *  - JSON.parse() can return null, an Array or an object.\n   */\n  public data<DataType extends object | string | null>(): DataType {\n    if (this.isContentTypeJSON() && this.responseData !== null) {\n      try {\n        return JSON.parse(this.responseData) as DataType\n      } catch (e) {} // eslint-disable-line no-empty\n    }\n\n    return this.responseData as DataType\n  }\n\n  public isContentTypeJSON() {\n    const contentType = this.header<string>('content-type')\n\n    if (contentType === undefined) {\n      return false\n    }\n\n    return REGEXP_CONTENT_TYPE_JSON.test(contentType)\n  }\n\n  /**\n   * Returns the last error instance that caused the request to fail\n   */\n  public error() {\n    const lastError = this.errors[this.errors.length - 1] || null\n\n    if (typeof lastError === 'string') {\n      return new Error(lastError)\n    }\n\n    return lastError\n  }\n\n  /**\n   * Enhances current Response returning a new Response\n   *\n   * @param {Object} extras\n   *   @param {Integer} extras.status - it will replace the current status\n   *   @param {String} extras.rawData - it will replace the current rawData\n   *   @param {Object} extras.headers - it will be merged with current headers\n   *   @param {Error} extras.error    - it will be added to the list of errors\n   */\n  public enhance(extras: ResponseParams) {\n    const mergedHeaders = { ...this.headers(), ...(extras.headers || {}) }\n    const enhancedResponse = new Response(\n      this.request(),\n      extras.status || this.status(),\n      extras.rawData || this.rawData() || undefined,\n      mergedHeaders,\n      extras.error ? [...this.errors, extras.error] : [...this.errors]\n    )\n    enhancedResponse.timeElapsed = this.timeElapsed\n\n    return enhancedResponse\n  }\n}\n\nexport default Response\n","import { performanceNow, assign, toQueryString, isPlainObject } from './utils'\nimport { configs as defaultConfigs } from './mappersmith'\nimport Response from './response'\nimport { isTimeoutError } from './gateway/timeout-error'\n\nconst REGEXP_EMULATE_HTTP = /^(delete|put|patch)/i\n\nfunction Gateway(request, configs = {}) {\n  this.request = request\n  this.configs = configs\n  this.successCallback = function () {\n    return undefined\n  }\n  this.failCallback = function () {\n    return undefined\n  }\n}\n\nGateway.extends = (methods) => assign({}, Gateway.prototype, methods)\n\nGateway.prototype = {\n  options() {\n    return this.configs\n  },\n\n  shouldEmulateHTTP() {\n    return this.options().emulateHTTP && REGEXP_EMULATE_HTTP.test(this.request.method())\n  },\n\n  call() {\n    const timeStart = performanceNow()\n    return new defaultConfigs.Promise((resolve, reject) => {\n      this.successCallback = (response) => {\n        response.timeElapsed = performanceNow() - timeStart\n        resolve(response)\n      }\n\n      this.failCallback = (response) => {\n        response.timeElapsed = performanceNow() - timeStart\n        reject(response)\n      }\n\n      try {\n        this[this.request.method()].apply(this, arguments)\n      } catch (e) {\n        this.dispatchClientError(e.message, e)\n      }\n    })\n  },\n\n  dispatchResponse(response) {\n    response.success() ? this.successCallback(response) : this.failCallback(response)\n  },\n\n  dispatchClientError(message, error) {\n    if (isTimeoutError(error) && this.options().enableHTTP408OnTimeouts) {\n      this.failCallback(new Response(this.request, 408, message, {}, [error]))\n    } else {\n      this.failCallback(new Response(this.request, 400, message, {}, [error]))\n    }\n  },\n\n  prepareBody(method, headers) {\n    let body = this.request.body()\n\n    if (this.shouldEmulateHTTP()) {\n      body = body || {}\n      isPlainObject(body) && (body._method = method)\n      headers['x-http-method-override'] = method\n    }\n\n    const bodyString = toQueryString(body)\n\n    if (bodyString) {\n      // If it's not simple, let the browser (or the user) set it\n      if (isPlainObject(body)) {\n        headers['content-type'] = 'application/x-www-form-urlencoded;charset=utf-8'\n      }\n    }\n\n    return bodyString\n  },\n}\n\nexport default Gateway\n","import Gateway from '../gateway'\nimport Response from '../response'\nimport { assign, parseResponseHeaders, btoa } from '../utils'\nimport { createTimeoutError } from './timeout-error'\n\nconst toBase64 = window.btoa || btoa\n\nfunction XHR() {\n  Gateway.apply(this, arguments)\n}\n\nXHR.prototype = Gateway.extends({\n  get() {\n    const xmlHttpRequest = this.createXHR()\n    xmlHttpRequest.open('GET', this.request.url(), true)\n    this.setHeaders(xmlHttpRequest, {})\n    this.configureTimeout(xmlHttpRequest)\n    this.configureBinary(xmlHttpRequest)\n    xmlHttpRequest.send()\n  },\n\n  head() {\n    const xmlHttpRequest = this.createXHR()\n    xmlHttpRequest.open('HEAD', this.request.url(), true)\n    this.setHeaders(xmlHttpRequest, {})\n    this.configureTimeout(xmlHttpRequest)\n    this.configureBinary(xmlHttpRequest)\n    xmlHttpRequest.send()\n  },\n\n  post() {\n    this.performRequest('post')\n  },\n\n  put() {\n    this.performRequest('put')\n  },\n\n  patch() {\n    this.performRequest('patch')\n  },\n\n  delete() {\n    this.performRequest('delete')\n  },\n\n  configureBinary(xmlHttpRequest) {\n    if (this.request.isBinary()) {\n      xmlHttpRequest.responseType = 'blob'\n    }\n  },\n\n  configureTimeout(xmlHttpRequest) {\n    this.canceled = false\n    this.timer = null\n\n    const timeout = this.request.timeout()\n\n    if (timeout) {\n      xmlHttpRequest.timeout = timeout\n      xmlHttpRequest.addEventListener('timeout', () => {\n        this.canceled = true\n        clearTimeout(this.timer)\n        const error = createTimeoutError(`Timeout (${timeout}ms)`)\n        this.dispatchClientError(error.message, error)\n      })\n\n      // PhantomJS doesn't support timeout for XMLHttpRequest\n      this.timer = setTimeout(() => {\n        this.canceled = true\n        const error = createTimeoutError(`Timeout (${timeout}ms)`)\n        this.dispatchClientError(error.message, error)\n      }, timeout + 1)\n    }\n  },\n\n  configureCallbacks(xmlHttpRequest) {\n    xmlHttpRequest.addEventListener('load', () => {\n      if (this.canceled) {\n        return\n      }\n\n      clearTimeout(this.timer)\n      this.dispatchResponse(this.createResponse(xmlHttpRequest))\n    })\n\n    xmlHttpRequest.addEventListener('error', (e) => {\n      if (this.canceled) {\n        return\n      }\n\n      clearTimeout(this.timer)\n      const guessedErrorCause = e ? e.message || e.name : xmlHttpRequest.responseText\n\n      const errorMessage = 'Network error'\n      const enhancedMessage = guessedErrorCause ? `: ${guessedErrorCause}` : ''\n      const error = new Error(`${errorMessage}${enhancedMessage}`)\n      this.dispatchClientError(errorMessage, error)\n    })\n\n    const xhrOptions = this.options().XHR\n    if (xhrOptions.withCredentials) {\n      xmlHttpRequest.withCredentials = true\n    }\n\n    if (xhrOptions.configure) {\n      xhrOptions.configure(xmlHttpRequest)\n    }\n  },\n\n  performRequest(method) {\n    const requestMethod = this.shouldEmulateHTTP() ? 'post' : method\n    const xmlHttpRequest = this.createXHR()\n    xmlHttpRequest.open(requestMethod.toUpperCase(), this.request.url(), true)\n\n    const customHeaders = {}\n    const body = this.prepareBody(method, customHeaders)\n    this.setHeaders(xmlHttpRequest, customHeaders)\n    this.configureTimeout(xmlHttpRequest)\n    this.configureBinary(xmlHttpRequest)\n\n    const args = []\n    body && args.push(body)\n\n    xmlHttpRequest.send.apply(xmlHttpRequest, args)\n  },\n\n  createResponse(xmlHttpRequest) {\n    const status = xmlHttpRequest.status\n    const data = this.request.isBinary() ? xmlHttpRequest.response : xmlHttpRequest.responseText\n    const responseHeaders = parseResponseHeaders(xmlHttpRequest.getAllResponseHeaders())\n    return new Response(this.request, status, data, responseHeaders)\n  },\n\n  setHeaders(xmlHttpRequest, customHeaders) {\n    const auth = this.request.auth()\n    if (auth) {\n      const username = auth.username || ''\n      const password = auth.password || ''\n      customHeaders['authorization'] = `Basic ${toBase64(`${username}:${password}`)}`\n    }\n\n    const headers = assign(customHeaders, this.request.headers())\n    Object.keys(headers).forEach((headerName) => {\n      xmlHttpRequest.setRequestHeader(headerName, headers[headerName])\n    })\n  },\n\n  createXHR() {\n    const xmlHttpRequest = new XMLHttpRequest()\n    this.configureCallbacks(xmlHttpRequest)\n    return xmlHttpRequest\n  },\n})\n\nexport default XHR\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n"],"sourceRoot":""}