{"version":3,"sources":["webpack://mappersmith/webpack/universalModuleDefinition","webpack://mappersmith/webpack/bootstrap","webpack://mappersmith/./src/client-builder.js","webpack://mappersmith/./src/gateway.js","webpack://mappersmith/./src/gateway/timeout-error.js","webpack://mappersmith/./src/gateway/xhr.js","webpack://mappersmith/./src/index.js","webpack://mappersmith/./src/manifest.ts","webpack://mappersmith/./src/mappersmith.js","webpack://mappersmith/./src/method-descriptor.ts","webpack://mappersmith/./src/request.ts","webpack://mappersmith/./src/response.ts","webpack://mappersmith/./src/utils.ts","webpack://mappersmith/./gateway/http (ignored)"],"names":["ClientBuilder","manifest","GatewayClassFactory","configs","Error","Promise","Manifest","maxMiddlewareStackExecutionAllowed","prototype","build","client","_manifest","eachResource","name","methods","buildResource","resourceName","reduce","resource","method","assign","requestParams","request","Request","descriptor","invokeMiddlewares","resourceMethod","initialRequest","middleware","createMiddleware","GatewayClass","gatewayConfigs","requestPhaseFailureContext","returnedInvalidRequest","abortExecution","getInitialRequest","resolve","chainRequestPhase","next","abort","error","then","prepareRequest","typeValue","prettyType","__name","e","executions","executeMiddlewareStack","message","stack","finalRequest","renew","chainResponsePhase","response","callGateway","call","execute","reject","REGEXP_EMULATE_HTTP","Gateway","successCallback","undefined","failCallback","options","shouldEmulateHTTP","emulateHTTP","test","timeStart","performanceNow","defaultConfigs","timeElapsed","apply","arguments","dispatchClientError","dispatchResponse","success","isTimeoutError","enableHTTP408OnTimeouts","Response","prepareBody","headers","body","isPlainObject","_method","bodyString","toQueryString","createTimeoutError","toBase64","window","btoa","XHR","get","xmlHttpRequest","createXHR","open","url","setHeaders","configureTimeout","configureBinary","send","head","post","performRequest","put","patch","isBinary","responseType","canceled","timer","timeout","addEventListener","clearTimeout","setTimeout","configureCallbacks","createResponse","guessedErrorCause","responseText","errorMessage","enhancedMessage","xhrOptions","withCredentials","configure","requestMethod","toUpperCase","customHeaders","args","push","status","data","responseHeaders","parseResponseHeaders","getAllResponseHeaders","auth","username","password","Object","keys","forEach","headerName","setRequestHeader","XMLHttpRequest","lib","require","_process","defaultGateway","eval","gateway","module","exports","context","host","allowResourceHostOverride","parameterEncoder","encodeURIComponent","bodyAttr","headersAttr","authAttr","timeoutAttr","hostAttr","clientId","resources","clientMiddleware","middlewares","ignoreGlobalMiddleware","callback","eachMethod","methodName","createMethodDescriptor","map","definition","path","MethodDescriptor","createInstance","middlewareFactory","defaultDescriptor","toString","req","middlewareParams","resourceMiddleware","version","fetch","HTTP","useSocketConnectionTimeout","onRequestWillStart","onRequestSocketAssigned","onSocketLookup","onSocketConnect","onSocketSecureConnect","onResponseReadable","onResponseEnd","Fetch","credentials","setContext","console","warn","forge","params","binary","queryParamAlias","REGEXP_DYNAMIC_SEGMENT","REGEXP_OPTIONAL_DYNAMIC_SEGMENT","REGEXP_TRAILING_SLASH","methodDescriptor","key","obj","isParam","toLowerCase","originalHost","replace","regexp","RegExp","dynamicSegmentKeys","match","exec","pattern","value","missingDynamicSegmentMatch","aliasedParams","aliased","aliasedKey","queryString","length","hasQuery","includes","prependSlash","str","headerAttr","mergedHeaders","lowerCaseObjectKeys","extras","authKey","bodyKey","headerKey","hostKey","timeoutKey","REGEXP_CONTENT_TYPE_JSON","originalRequest","responseStatus","responseData","errors","maskedAuth","enhance","isContentTypeJSON","JSON","parse","contentType","header","lastError","enhancedResponse","rawData","getNanoSeconds","loadTime","hasProcessHrtime","hrtime","hr","R20","isNeitherNullNorUndefined","x","validKeys","entry","filter","buildRecursive","suffix","Array","isArray","v","join","k","now","Date","headerStr","headerPairs","split","i","headerPair","index","indexOf","substring","trim","val","target","hasOwnProperty","source","getPrototypeOf","CHARS","input","output","String","block","charCode","idx","charAt","charCodeAt"],"mappings":"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","file":"mappersmith.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mappersmith\"] = factory();\n\telse\n\t\troot[\"mappersmith\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import Manifest from './manifest'\nimport Request from './request'\nimport { assign } from './utils'\n\n/**\n * @typedef ClientBuilder\n * @param {Object} manifest - manifest definition with at least the `resources` key\n * @param {Function} GatewayClassFactory - factory function that returns a gateway class\n */\nfunction ClientBuilder(manifest, GatewayClassFactory, configs) {\n  if (!manifest) {\n    throw new Error(`[Mappersmith] invalid manifest (${manifest})`)\n  }\n\n  if (!GatewayClassFactory || !GatewayClassFactory()) {\n    throw new Error('[Mappersmith] gateway class not configured (configs.gateway)')\n  }\n\n  this.Promise = configs.Promise\n  this.manifest = new Manifest(manifest, configs)\n  this.GatewayClassFactory = GatewayClassFactory\n  this.maxMiddlewareStackExecutionAllowed = configs.maxMiddlewareStackExecutionAllowed\n}\n\nClientBuilder.prototype = {\n  build() {\n    const client = { _manifest: this.manifest }\n\n    this.manifest.eachResource((name, methods) => {\n      client[name] = this.buildResource(name, methods)\n    })\n\n    return client\n  },\n\n  buildResource(resourceName, methods) {\n    return methods.reduce(\n      (resource, method) =>\n        assign(resource, {\n          [method.name]: (requestParams) => {\n            const request = new Request(method.descriptor, requestParams)\n            return this.invokeMiddlewares(resourceName, method.name, request)\n          },\n        }),\n      {}\n    )\n  },\n\n  invokeMiddlewares(resourceName, resourceMethod, initialRequest) {\n    const middleware = this.manifest.createMiddleware({ resourceName, resourceMethod })\n    const GatewayClass = this.GatewayClassFactory()\n    const gatewayConfigs = this.manifest.gatewayConfigs\n    const requestPhaseFailureContext = {\n      middleware: null,\n      returnedInvalidRequest: false,\n      abortExecution: false,\n    }\n\n    const getInitialRequest = () => this.Promise.resolve(initialRequest)\n    const chainRequestPhase = (next, middleware) => () => {\n      const abort = (error) => {\n        requestPhaseFailureContext.abortExecution = true\n        throw error\n      }\n\n      return this.Promise.resolve()\n        .then(() => middleware.prepareRequest(next, abort))\n        .then((request) => {\n          if (request instanceof Request) {\n            return request\n          }\n\n          requestPhaseFailureContext.returnedInvalidRequest = true\n          const typeValue = typeof request\n          const prettyType =\n            typeValue === 'object' || typeValue === 'function'\n              ? request.name || typeValue\n              : typeValue\n\n          throw new Error(\n            `[Mappersmith] middleware \"${middleware.__name}\" should return \"Request\" but returned \"${prettyType}\"`\n          )\n        })\n        .catch((e) => {\n          requestPhaseFailureContext.middleware = middleware.__name\n          throw e\n        })\n    }\n\n    const prepareRequest = middleware.reduce(chainRequestPhase, getInitialRequest)\n    let executions = 0\n\n    const executeMiddlewareStack = () =>\n      prepareRequest()\n        .catch((e) => {\n          const { returnedInvalidRequest, abortExecution, middleware } = requestPhaseFailureContext\n          if (returnedInvalidRequest || abortExecution) {\n            throw e\n          }\n\n          const error = new Error(\n            `[Mappersmith] middleware \"${middleware}\" failed in the request phase: ${e.message}`\n          )\n          error.stack = e.stack\n          throw error\n        })\n        .then((finalRequest) => {\n          executions++\n\n          if (executions > this.maxMiddlewareStackExecutionAllowed) {\n            throw new Error(\n              `[Mappersmith] infinite loop detected (middleware stack invoked ${executions} times). Check the use of \"renew\" in one of the middleware.`\n            )\n          }\n\n          const renew = executeMiddlewareStack\n          const chainResponsePhase = (next, middleware) => () => middleware.response(next, renew)\n          const callGateway = () => new GatewayClass(finalRequest, gatewayConfigs).call()\n          const execute = middleware.reduce(chainResponsePhase, callGateway)\n          return execute()\n        })\n\n    return new this.Promise((resolve, reject) => {\n      executeMiddlewareStack()\n        .then((response) => resolve(response))\n        .catch(reject)\n    })\n  },\n}\n\nexport default ClientBuilder\n","import { performanceNow, assign, toQueryString, isPlainObject } from './utils'\nimport { configs as defaultConfigs } from './mappersmith'\nimport Response from './response'\nimport { isTimeoutError } from './gateway/timeout-error'\n\nconst REGEXP_EMULATE_HTTP = /^(delete|put|patch)/i\n\nfunction Gateway(request, configs = {}) {\n  this.request = request\n  this.configs = configs\n  this.successCallback = function () {\n    return undefined\n  }\n  this.failCallback = function () {\n    return undefined\n  }\n}\n\nGateway.extends = (methods) => assign({}, Gateway.prototype, methods)\n\nGateway.prototype = {\n  options() {\n    return this.configs\n  },\n\n  shouldEmulateHTTP() {\n    return this.options().emulateHTTP && REGEXP_EMULATE_HTTP.test(this.request.method())\n  },\n\n  call() {\n    const timeStart = performanceNow()\n    return new defaultConfigs.Promise((resolve, reject) => {\n      this.successCallback = (response) => {\n        response.timeElapsed = performanceNow() - timeStart\n        resolve(response)\n      }\n\n      this.failCallback = (response) => {\n        response.timeElapsed = performanceNow() - timeStart\n        reject(response)\n      }\n\n      try {\n        this[this.request.method()].apply(this, arguments)\n      } catch (e) {\n        this.dispatchClientError(e.message, e)\n      }\n    })\n  },\n\n  dispatchResponse(response) {\n    response.success() ? this.successCallback(response) : this.failCallback(response)\n  },\n\n  dispatchClientError(message, error) {\n    if (isTimeoutError(error) && this.options().enableHTTP408OnTimeouts) {\n      this.failCallback(new Response(this.request, 408, message, {}, [error]))\n    } else {\n      this.failCallback(new Response(this.request, 400, message, {}, [error]))\n    }\n  },\n\n  prepareBody(method, headers) {\n    let body = this.request.body()\n\n    if (this.shouldEmulateHTTP()) {\n      body = body || {}\n      isPlainObject(body) && (body._method = method)\n      headers['x-http-method-override'] = method\n    }\n\n    const bodyString = toQueryString(body)\n\n    if (bodyString) {\n      // If it's not simple, let the browser (or the user) set it\n      if (isPlainObject(body)) {\n        headers['content-type'] = 'application/x-www-form-urlencoded;charset=utf-8'\n      }\n    }\n\n    return bodyString\n  },\n}\n\nexport default Gateway\n","export const isTimeoutError = (e) => {\n  return e && e.name === 'TimeoutError'\n}\n\nexport const createTimeoutError = (message) => {\n  const error = new Error(message)\n  error.name = 'TimeoutError'\n  return error\n}\n","import Gateway from '../gateway'\nimport Response from '../response'\nimport { assign, parseResponseHeaders, btoa } from '../utils'\nimport { createTimeoutError } from './timeout-error'\n\nconst toBase64 = window.btoa || btoa\n\nfunction XHR() {\n  Gateway.apply(this, arguments)\n}\n\nXHR.prototype = Gateway.extends({\n  get() {\n    const xmlHttpRequest = this.createXHR()\n    xmlHttpRequest.open('GET', this.request.url(), true)\n    this.setHeaders(xmlHttpRequest, {})\n    this.configureTimeout(xmlHttpRequest)\n    this.configureBinary(xmlHttpRequest)\n    xmlHttpRequest.send()\n  },\n\n  head() {\n    const xmlHttpRequest = this.createXHR()\n    xmlHttpRequest.open('HEAD', this.request.url(), true)\n    this.setHeaders(xmlHttpRequest, {})\n    this.configureTimeout(xmlHttpRequest)\n    this.configureBinary(xmlHttpRequest)\n    xmlHttpRequest.send()\n  },\n\n  post() {\n    this.performRequest('post')\n  },\n\n  put() {\n    this.performRequest('put')\n  },\n\n  patch() {\n    this.performRequest('patch')\n  },\n\n  delete() {\n    this.performRequest('delete')\n  },\n\n  configureBinary(xmlHttpRequest) {\n    if (this.request.isBinary()) {\n      xmlHttpRequest.responseType = 'blob'\n    }\n  },\n\n  configureTimeout(xmlHttpRequest) {\n    this.canceled = false\n    this.timer = null\n\n    const timeout = this.request.timeout()\n\n    if (timeout) {\n      xmlHttpRequest.timeout = timeout\n      xmlHttpRequest.addEventListener('timeout', () => {\n        this.canceled = true\n        clearTimeout(this.timer)\n        const error = createTimeoutError(`Timeout (${timeout}ms)`)\n        this.dispatchClientError(error.message, error)\n      })\n\n      // PhantomJS doesn't support timeout for XMLHttpRequest\n      this.timer = setTimeout(() => {\n        this.canceled = true\n        const error = createTimeoutError(`Timeout (${timeout}ms)`)\n        this.dispatchClientError(error.message, error)\n      }, timeout + 1)\n    }\n  },\n\n  configureCallbacks(xmlHttpRequest) {\n    xmlHttpRequest.addEventListener('load', () => {\n      if (this.canceled) {\n        return\n      }\n\n      clearTimeout(this.timer)\n      this.dispatchResponse(this.createResponse(xmlHttpRequest))\n    })\n\n    xmlHttpRequest.addEventListener('error', (e) => {\n      if (this.canceled) {\n        return\n      }\n\n      clearTimeout(this.timer)\n      const guessedErrorCause = e ? e.message || e.name : xmlHttpRequest.responseText\n\n      const errorMessage = 'Network error'\n      const enhancedMessage = guessedErrorCause ? `: ${guessedErrorCause}` : ''\n      const error = new Error(`${errorMessage}${enhancedMessage}`)\n      this.dispatchClientError(errorMessage, error)\n    })\n\n    const xhrOptions = this.options().XHR\n    if (xhrOptions.withCredentials) {\n      xmlHttpRequest.withCredentials = true\n    }\n\n    if (xhrOptions.configure) {\n      xhrOptions.configure(xmlHttpRequest)\n    }\n  },\n\n  performRequest(method) {\n    const requestMethod = this.shouldEmulateHTTP() ? 'post' : method\n    const xmlHttpRequest = this.createXHR()\n    xmlHttpRequest.open(requestMethod.toUpperCase(), this.request.url(), true)\n\n    const customHeaders = {}\n    const body = this.prepareBody(method, customHeaders)\n    this.setHeaders(xmlHttpRequest, customHeaders)\n    this.configureTimeout(xmlHttpRequest)\n    this.configureBinary(xmlHttpRequest)\n\n    const args = []\n    body && args.push(body)\n\n    xmlHttpRequest.send.apply(xmlHttpRequest, args)\n  },\n\n  createResponse(xmlHttpRequest) {\n    const status = xmlHttpRequest.status\n    const data = this.request.isBinary() ? xmlHttpRequest.response : xmlHttpRequest.responseText\n    const responseHeaders = parseResponseHeaders(xmlHttpRequest.getAllResponseHeaders())\n    return new Response(this.request, status, data, responseHeaders)\n  },\n\n  setHeaders(xmlHttpRequest, customHeaders) {\n    const auth = this.request.auth()\n    if (auth) {\n      const username = auth.username || ''\n      const password = auth.password || ''\n      customHeaders['authorization'] = `Basic ${toBase64(`${username}:${password}`)}`\n    }\n\n    const headers = assign(customHeaders, this.request.headers())\n    Object.keys(headers).forEach((headerName) => {\n      xmlHttpRequest.setRequestHeader(headerName, headers[headerName])\n    })\n  },\n\n  createXHR() {\n    const xmlHttpRequest = new XMLHttpRequest()\n    this.configureCallbacks(xmlHttpRequest)\n    return xmlHttpRequest\n  },\n})\n\nexport default XHR\n","/* eslint-disable @typescript-eslint/no-var-requires */\nvar lib = require('./mappersmith')\nvar _process, defaultGateway\n\n// Prevents webpack to load the nodejs processs polyfill\ntry {\n  // eslint-disable-next-line no-eval\n  _process = eval('typeof process === \"object\" ? process : undefined')\n} catch (e) {} // eslint-disable-line no-empty\n\nif (typeof XMLHttpRequest !== 'undefined') {\n  // For browsers use XHR adapter\n  defaultGateway = require('./gateway/xhr').default\n} else if (typeof _process !== 'undefined') {\n  // For node use HTTP adapter\n  defaultGateway = require('./gateway/http').default\n}\n\nlib.configs.gateway = defaultGateway\nmodule.exports = lib\n","import { MethodDescriptor, MethodDescriptorParams } from './method-descriptor'\nimport { assign } from './utils'\nimport type { GatewayConfiguration, ParameterEncoderFn } from './types'\nimport { Context, Middleware, MiddlewareDescriptor, MiddlewareParams } from './middleware'\n\ninterface GlobalConfigs {\n  gatewayConfigs?: GatewayConfiguration\n  middleware?: Middleware[]\n  context?: Context\n}\ninterface Resources {\n  [resourceName: string]: {\n    [methodName: string]: Omit<MethodDescriptorParams, 'host'> & { host?: string }\n  }\n}\ninterface ManifestOptions {\n  host: string\n  allowResourceHostOverride?: boolean\n  parameterEncoder?: ParameterEncoderFn\n  bodyAttr?: string\n  headersAttr?: string\n  authAttr?: string\n  timeoutAttr?: string\n  hostAttr?: string\n  clientId?: string\n  gatewayConfigs?: GatewayConfiguration\n  resources?: Resources\n  middleware?: Middleware[]\n  /**\n   * @deprecated - use `middleware` instead\n   */\n  middlewares?: Middleware[]\n  ignoreGlobalMiddleware?: boolean\n}\ntype Method = { name: string; descriptor: MethodDescriptor }\ntype EachResourceCallbackFn = (name: string, methods: Method[]) => string\ntype EachMethodCallbackFn = (name: string) => Method\ntype CreateMiddlewareParams = Partial<Omit<MiddlewareParams, 'resourceName' | 'resourceMethod'>> &\n  Pick<MiddlewareParams, 'resourceName' | 'resourceMethod'>\n/**\n * @typedef Manifest\n * @param {Object} obj\n *   @param {Object} obj.gatewayConfigs - default: base values from mappersmith\n *   @param {Object} obj.ignoreGlobalMiddleware - default: false\n *   @param {Object} obj.resources - default: {}\n *   @param {Array}  obj.middleware or obj.middlewares - default: []\n * @param {Object} globalConfigs\n */\nexport class Manifest {\n  public host: string\n  public allowResourceHostOverride: boolean\n  public parameterEncoder: ParameterEncoderFn\n  public bodyAttr?: string\n  public headersAttr?: string\n  public authAttr?: string\n  public timeoutAttr?: string\n  public hostAttr?: string\n  public clientId: string | null\n  public gatewayConfigs: GatewayConfiguration\n  public resources: Resources\n  public context: Context\n  public middleware: Middleware[]\n\n  constructor(\n    options: ManifestOptions,\n    { gatewayConfigs, middleware = [], context = {} }: GlobalConfigs\n  ) {\n    this.host = options.host\n    this.allowResourceHostOverride = options.allowResourceHostOverride || false\n    this.parameterEncoder = options.parameterEncoder || encodeURIComponent\n    this.bodyAttr = options.bodyAttr\n    this.headersAttr = options.headersAttr\n    this.authAttr = options.authAttr\n    this.timeoutAttr = options.timeoutAttr\n    this.hostAttr = options.hostAttr\n    this.clientId = options.clientId || null\n    this.gatewayConfigs = assign({}, gatewayConfigs, options.gatewayConfigs)\n    this.resources = options.resources || {}\n    this.context = context\n\n    // TODO: deprecate obj.middlewares in favor of obj.middleware\n    const clientMiddleware = options.middleware || options.middlewares || []\n\n    if (options.ignoreGlobalMiddleware) {\n      this.middleware = clientMiddleware\n    } else {\n      this.middleware = [...clientMiddleware, ...middleware]\n    }\n  }\n\n  public eachResource(callback: EachResourceCallbackFn) {\n    Object.keys(this.resources).forEach((resourceName) => {\n      const methods = this.eachMethod(resourceName, (methodName) => ({\n        name: methodName,\n        descriptor: this.createMethodDescriptor(resourceName, methodName),\n      }))\n\n      callback(resourceName, methods)\n    })\n  }\n\n  private eachMethod(resourceName: string, callback: EachMethodCallbackFn) {\n    return Object.keys(this.resources[resourceName]).map(callback)\n  }\n\n  public createMethodDescriptor(resourceName: string, methodName: string) {\n    const definition = this.resources[resourceName][methodName]\n\n    if (!definition || !definition.path) {\n      throw new Error(\n        `[Mappersmith] path is undefined for resource \"${resourceName}\" method \"${methodName}\"`\n      )\n    }\n\n    return new MethodDescriptor(\n      assign(\n        {\n          host: this.host,\n          allowResourceHostOverride: this.allowResourceHostOverride,\n          parameterEncoder: this.parameterEncoder,\n          bodyAttr: this.bodyAttr,\n          headersAttr: this.headersAttr,\n          authAttr: this.authAttr,\n          timeoutAttr: this.timeoutAttr,\n          hostAttr: this.hostAttr,\n        },\n        definition\n      )\n    )\n  }\n\n  /**\n   * @param {Object} args\n   *   @param {String|Null} args.clientId\n   *   @param {String} args.resourceName\n   *   @param {String} args.resourceMethod\n   *   @param {Object} args.context\n   *   @param {Boolean} args.mockRequest\n   *\n   * @return {Array<Object>}\n   */\n  public createMiddleware(args: CreateMiddlewareParams) {\n    const createInstance = (middlewareFactory: Middleware) => {\n      const defaultDescriptor: MiddlewareDescriptor = {\n        __name: middlewareFactory.name || middlewareFactory.toString(),\n        response(next) {\n          return next()\n        },\n        /**\n         * @since 2.27.0\n         * Replaced the request method\n         */\n        prepareRequest(next) {\n          return this.request ? next().then((req) => this.request?.(req)) : next()\n        },\n      }\n\n      const middlewareParams = assign(args, {\n        clientId: this.clientId,\n        context: assign({}, this.context),\n      })\n\n      return assign(defaultDescriptor, middlewareFactory(middlewareParams))\n    }\n\n    const { resourceName: name, resourceMethod: method } = args\n    const resourceMiddleware = this.createMethodDescriptor(name, method).middleware\n    const middlewares = [...resourceMiddleware, ...this.middleware]\n\n    return middlewares.map(createInstance)\n  }\n}\n\nexport default Manifest\n","/* global VERSION */\nimport ClientBuilder from './client-builder'\nimport { assign } from './utils'\n\nexport const version = VERSION\n\nexport const configs = {\n  context: {},\n  middleware: [],\n  Promise: typeof Promise === 'function' ? Promise : null,\n  fetch: typeof fetch === 'function' ? fetch : null,\n\n  /**\n   * The maximum amount of executions allowed before it is considered an infinite loop.\n   * In the response phase of middleware, it's possible to execute a function called \"renew\",\n   * which can be used to rerun the middleware stack. This feature is useful in some scenarios,\n   * for example, re-fetching an invalid access token.\n\n   * This configuration is used to detect infinite loops, don't increase this value too much\n   * @default 2\n   */\n  maxMiddlewareStackExecutionAllowed: 2,\n\n  /**\n   * Gateway implementation, it defaults to \"lib/gateway/xhr\" for browsers and\n   * \"lib/gateway/http\" for node\n   */\n  gateway: null,\n  gatewayConfigs: {\n    /**\n     * Setting this option will fake PUT, PATCH and DELETE requests with a HTTP POST. It will\n     * add \"_method\" and \"X-HTTP-Method-Override\" with the original requested method\n     * @default false\n     */\n    emulateHTTP: false,\n\n    /**\n     * Setting this option will return HTTP status 408 (Request Timeout) when a request times\n     * out. When \"false\", HTTP status 400 (Bad Request) will be used instead.\n     * @default false\n     */\n    enableHTTP408OnTimeouts: false,\n\n    XHR: {\n      /**\n       * Indicates whether or not cross-site Access-Control requests should be made using credentials\n       * such as cookies, authorization headers or TLS client certificates.\n       * Setting withCredentials has no effect on same-site requests\n       *\n       * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n       *\n       * @default false\n       */\n      withCredentials: false,\n\n      /**\n       * For additional configurations to the XMLHttpRequest object.\n       * @param {XMLHttpRequest} xhr\n       * @default null\n       */\n      configure: null,\n    },\n\n    HTTP: {\n      /**\n       * Enable this option to evaluate timeout on entire request durations,\n       * including DNS resolution and socket connection.\n       *\n       * See original nodejs issue: https://github.com/nodejs/node/pull/8101\n       *\n       * @default false\n       */\n      useSocketConnectionTimeout: false,\n      /**\n       * For additional configurations to the http/https module\n       * For http: https://nodejs.org/api/http.html#http_http_request_options_callback\n       * For https: https://nodejs.org/api/https.html#https_https_request_options_callback\n       *\n       * @param {object} options\n       * @default null\n       */\n      configure: null,\n      onRequestWillStart: null,\n      onRequestSocketAssigned: null,\n      onSocketLookup: null,\n      onSocketConnect: null,\n      onSocketSecureConnect: null,\n      onResponseReadable: null,\n      onResponseEnd: null,\n    },\n\n    Fetch: {\n      /**\n       * Indicates whether the user agent should send cookies from the other domain in the case of cross-origin\n       * requests. This is similar to XHR’s withCredentials flag, but with three available values (instead of two):\n       *\n       * \"omit\": Never send cookies.\n       * \"same-origin\": Only send cookies if the URL is on the same origin as the calling script.\n       * \"include\": Always send cookies, even for cross-origin calls.\n       *\n       * https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials\n       *\n       * @default \"omit\"\n       */\n      credentials: 'omit',\n    },\n  },\n}\n\n/**\n * @deprecated Shouldn't be used, not safe for concurrent use.\n * @param {Object} context\n */\nexport const setContext = (context) => {\n  console.warn(\n    'The use of setContext is deprecated - you need to find another way to pass data between your middlewares.'\n  )\n  configs.context = assign(configs.context, context)\n}\n\n/**\n * @param {Object} manifest\n */\nexport default function forge(manifest) {\n  const GatewayClassFactory = () => configs.gateway\n  return new ClientBuilder(manifest, GatewayClassFactory, configs).build()\n}\n","import type { Headers, RequestParams, ParameterEncoderFn, Params } from './types'\nimport type { Middleware } from './middleware'\n\nexport interface MethodDescriptorParams {\n  allowResourceHostOverride?: boolean\n  parameterEncoder?: ParameterEncoderFn\n  authAttr?: string\n  binary?: boolean\n  bodyAttr?: string\n  headers?: Headers\n  headersAttr?: string\n  host: string\n  hostAttr?: string\n  method?: string\n  middleware?: Array<Middleware>\n  middlewares?: Array<Middleware>\n  params?: Params\n  path: string | ((args: RequestParams) => string)\n  queryParamAlias?: Record<string, string>\n  timeoutAttr?: string\n}\n\n/**\n * @typedef MethodDescriptor\n * @param {MethodDescriptorParams} params\n *   @param {boolean} params.allowResourceHostOverride\n *   @param {Function} params.parameterEncoder\n *   @param {String} params.authAttr - auth attribute name. Default: 'auth'\n *   @param {boolean} params.binary\n *   @param {String} params.bodyAttr - body attribute name. Default: 'body'\n *   @param {Headers} params.headers\n *   @param {String} params.headersAttr - headers attribute name. Default: 'headers'\n *   @param {String} params.host\n *   @param {String} params.hostAttr - host attribute name. Default: 'host'\n *   @param {String} params.method\n *   @param {Middleware[]} params.middleware\n *   @param {Middleware[]} params.middlewares - alias for middleware\n *   @param {RequestParams} params.params\n *   @param {String|Function} params.path\n *   @param {Object} params.queryParamAlias\n *   @param {Number} params.timeoutAttr - timeout attribute name. Default: 'timeout'\n */\nexport class MethodDescriptor {\n  public readonly allowResourceHostOverride: boolean\n  public readonly parameterEncoder: ParameterEncoderFn\n  public readonly authAttr: string\n  public readonly binary: boolean\n  public readonly bodyAttr: string\n  public readonly headers?: Headers\n  public readonly headersAttr: string\n  public readonly host: string\n  public readonly hostAttr: string\n  public readonly method: string\n  public readonly middleware: Middleware[]\n  public readonly params?: RequestParams\n  public readonly path: string | ((args: RequestParams) => string)\n  public readonly queryParamAlias: Record<string, string>\n  public readonly timeoutAttr: string\n\n  constructor(params: MethodDescriptorParams) {\n    this.allowResourceHostOverride = params.allowResourceHostOverride || false\n    this.parameterEncoder = params.parameterEncoder || encodeURIComponent\n    this.binary = params.binary || false\n    this.headers = params.headers\n    this.host = params.host\n    this.method = params.method || 'get'\n    this.params = params.params\n    this.path = params.path\n    this.queryParamAlias = params.queryParamAlias || {}\n\n    this.authAttr = params.authAttr || 'auth'\n    this.bodyAttr = params.bodyAttr || 'body'\n    this.headersAttr = params.headersAttr || 'headers'\n    this.hostAttr = params.hostAttr || 'host'\n    this.timeoutAttr = params.timeoutAttr || 'timeout'\n\n    const resourceMiddleware = params.middleware || params.middlewares || []\n    this.middleware = resourceMiddleware\n  }\n}\n\nexport default MethodDescriptor\n","import { MethodDescriptor } from './method-descriptor'\nimport { toQueryString, lowerCaseObjectKeys, assign } from './utils'\nimport type { Headers, Primitive, RequestParams } from './types'\n\nconst REGEXP_DYNAMIC_SEGMENT = /{([^}?]+)\\??}/\nconst REGEXP_OPTIONAL_DYNAMIC_SEGMENT = /\\/?{([^}?]+)\\?}/g\nconst REGEXP_TRAILING_SLASH = /\\/$/\n\n/**\n * @typedef Request\n * @param {MethodDescriptor} methodDescriptor\n * @param {RequestParams} requestParams, defaults to an empty object ({})\n */\nexport class Request {\n  public methodDescriptor: MethodDescriptor\n  public requestParams: RequestParams\n\n  constructor(methodDescriptor: MethodDescriptor, requestParams: RequestParams = {}) {\n    this.methodDescriptor = methodDescriptor\n    this.requestParams = requestParams\n  }\n\n  private isParam(key: string) {\n    return (\n      key !== this.methodDescriptor.headersAttr &&\n      key !== this.methodDescriptor.bodyAttr &&\n      key !== this.methodDescriptor.authAttr &&\n      key !== this.methodDescriptor.timeoutAttr &&\n      key !== this.methodDescriptor.hostAttr\n    )\n  }\n\n  public params() {\n    const params = assign({}, this.methodDescriptor.params, this.requestParams)\n\n    return Object.keys(params).reduce((obj, key) => {\n      if (this.isParam(key)) {\n        obj[key] = params[key]\n      }\n      return obj\n    }, {} as RequestParams)\n  }\n\n  /**\n   * Returns the HTTP method in lowercase\n   */\n  public method() {\n    return this.methodDescriptor.method.toLowerCase()\n  }\n\n  /**\n   * Returns host name without trailing slash\n   * Example: 'http://example.org'\n   */\n  public host() {\n    const { allowResourceHostOverride, hostAttr, host } = this.methodDescriptor\n    const originalHost = allowResourceHostOverride\n      ? this.requestParams[hostAttr] || host || ''\n      : host || ''\n\n    if (typeof originalHost === 'string') {\n      return originalHost.replace(REGEXP_TRAILING_SLASH, '')\n    }\n\n    return ''\n  }\n\n  /**\n   * Returns path with parameters and leading slash.\n   * Example: '/some/path?param1=true'\n   *\n   * @throws {Error} if any dynamic segment is missing.\n   * Example:\n   *  Imagine the path '/some/{name}', the error will be similar to:\n   *    '[Mappersmith] required parameter missing (name), \"/some/{name}\" cannot be resolved'\n   */\n  public path() {\n    const params = this.params()\n\n    let path\n\n    if (typeof this.methodDescriptor.path === 'function') {\n      path = this.methodDescriptor.path(params)\n    } else {\n      path = this.methodDescriptor.path\n    }\n\n    if (path[0] !== '/') {\n      path = `/${path}`\n    }\n\n    // RegExp with 'g'-flag is stateful, therefore defining it locally\n    const regexp = new RegExp(REGEXP_DYNAMIC_SEGMENT, 'g')\n\n    const dynamicSegmentKeys = []\n    let match\n    while ((match = regexp.exec(path)) !== null) {\n      dynamicSegmentKeys.push(match[1])\n    }\n\n    for (const key of dynamicSegmentKeys) {\n      const pattern = new RegExp(`{${key}\\\\??}`, 'g')\n      const value = params[key]\n      if (value != null && typeof value !== 'object') {\n        path = path.replace(pattern, this.methodDescriptor.parameterEncoder(value))\n        delete params[key]\n      }\n    }\n\n    path = path.replace(REGEXP_OPTIONAL_DYNAMIC_SEGMENT, '')\n\n    const missingDynamicSegmentMatch = path.match(REGEXP_DYNAMIC_SEGMENT)\n    if (missingDynamicSegmentMatch) {\n      throw new Error(\n        `[Mappersmith] required parameter missing (${missingDynamicSegmentMatch[1]}), \"${path}\" cannot be resolved`\n      )\n    }\n\n    const aliasedParams = Object.keys(params).reduce((aliased, key) => {\n      const aliasedKey = this.methodDescriptor.queryParamAlias[key] || key\n      const value = params[key]\n      if (value != null && typeof value !== 'object') {\n        aliased[aliasedKey] = value\n      }\n      return aliased\n    }, {} as Record<string, Primitive>)\n\n    const queryString = toQueryString(aliasedParams)\n    if (typeof queryString === 'string' && queryString.length !== 0) {\n      const hasQuery = path.includes('?')\n      path += `${hasQuery ? '&' : '?'}${queryString}`\n    }\n\n    return path\n  }\n\n  /**\n   * Returns the template path, without params, before interpolation.\n   * If path is a function, returns the result of request.path()\n   * Example: '/some/{param}/path'\n   */\n  public pathTemplate() {\n    const path = this.methodDescriptor.path\n\n    const prependSlash = (str: string) => (str[0] !== '/' ? `/${str}` : str)\n\n    if (typeof path === 'function') {\n      return prependSlash(path(this.params()))\n    }\n\n    return prependSlash(path)\n  }\n\n  /**\n   * Returns the full URL\n   * Example: http://example.org/some/path?param1=true\n   *\n   */\n  public url() {\n    return `${this.host()}${this.path()}`\n  }\n\n  /**\n   * Returns an object with the headers. Header names are converted to\n   * lowercase\n   */\n  public headers() {\n    const headerAttr = this.methodDescriptor.headersAttr\n    const headers = (this.requestParams[headerAttr] || {}) as Headers\n    const mergedHeaders = { ...this.methodDescriptor.headers, ...headers } as Headers\n    return lowerCaseObjectKeys(mergedHeaders)\n  }\n\n  /**\n   * Utility method to get a header value by name\n   */\n  public header(name: string) {\n    return this.headers()[name.toLowerCase()]\n  }\n\n  public body() {\n    return this.requestParams[this.methodDescriptor.bodyAttr]\n  }\n\n  public auth() {\n    return this.requestParams[this.methodDescriptor.authAttr]\n  }\n\n  public timeout() {\n    return this.requestParams[this.methodDescriptor.timeoutAttr]\n  }\n\n  /**\n   * Enhances current request returning a new Request\n   * @param {RequestParams} extras\n   *   @param {Object} extras.auth - it will replace the current auth\n   *   @param {String|Object} extras.body - it will replace the current body\n   *   @param {Headers} extras.headers - it will be merged with current headers\n   *   @param {String} extras.host - it will replace the current timeout\n   *   @param {RequestParams} extras.params - it will be merged with current params\n   *   @param {Number} extras.timeout - it will replace the current timeout\n   */\n  public enhance(extras: RequestParams) {\n    const authKey = this.methodDescriptor.authAttr\n    const bodyKey = this.methodDescriptor.bodyAttr\n    const headerKey = this.methodDescriptor.headersAttr\n    const hostKey = this.methodDescriptor.hostAttr\n    const timeoutKey = this.methodDescriptor.timeoutAttr\n\n    // Note: The result of merging an instance of RequestParams with instance of Params\n    // is simply a RequestParams with even more [param: string]'s on it.\n    const requestParams: RequestParams = assign({}, this.requestParams, extras.params)\n\n    const headers = this.requestParams[headerKey] as Headers | undefined\n    const mergedHeaders = assign({}, headers, extras.headers)\n    requestParams[headerKey] = mergedHeaders\n\n    extras.auth && (requestParams[authKey] = extras.auth)\n    extras.body && (requestParams[bodyKey] = extras.body)\n    extras.host && (requestParams[hostKey] = extras.host)\n    extras.timeout && (requestParams[timeoutKey] = extras.timeout)\n\n    return new Request(this.methodDescriptor, requestParams)\n  }\n\n  /**\n   * Is the request expecting a binary response?\n   */\n  public isBinary() {\n    return this.methodDescriptor.binary\n  }\n}\n\nexport default Request\n","import { lowerCaseObjectKeys } from './utils'\nimport { Request } from './request'\nimport type { Headers } from './types'\n\nconst REGEXP_CONTENT_TYPE_JSON = /^application\\/(json|.*\\+json)/\n\nexport interface ResponseParams {\n  readonly status?: number\n  readonly rawData?: string\n  readonly headers?: Headers\n  readonly error?: Error\n}\n\n/**\n * @typedef Response\n * @param {Request} originalRequest, for auth it hides the password\n * @param {Integer} responseStatus\n * @param {String} responseData, defaults to null\n * @param {Object} responseHeaders, defaults to an empty object ({})\n * @param {Array<Error>} errors, defaults to an empty array ([])\n */\nexport class Response {\n  public readonly originalRequest: Request\n  public readonly responseStatus: number\n  public readonly responseData: string | null\n  public readonly responseHeaders: Headers\n  public readonly errors: Array<Error | string>\n  public timeElapsed: number | null\n\n  constructor(\n    originalRequest: Request,\n    responseStatus: number,\n    responseData?: string,\n    responseHeaders?: Headers,\n    errors?: Array<Error | string>\n  ) {\n    const auth = originalRequest.requestParams && originalRequest.requestParams.auth\n    if (auth) {\n      const maskedAuth = { ...auth, password: '***' }\n      this.originalRequest = originalRequest.enhance({ auth: maskedAuth })\n    } else {\n      this.originalRequest = originalRequest\n    }\n\n    this.responseStatus = responseStatus\n    this.responseData = responseData !== undefined ? responseData : null\n    this.responseHeaders = responseHeaders || {}\n    this.errors = errors || []\n    this.timeElapsed = null\n  }\n\n  public request() {\n    return this.originalRequest\n  }\n\n  public status() {\n    // IE sends 1223 instead of 204\n    if (this.responseStatus === 1223) {\n      return 204\n    }\n\n    return this.responseStatus\n  }\n\n  /**\n   * Returns true if status is greater or equal 200 or lower than 400\n   */\n  public success() {\n    const status = this.status()\n    return status >= 200 && status < 400\n  }\n\n  /**\n   * Returns an object with the headers. Header names are converted to\n   * lowercase\n   */\n  public headers() {\n    return lowerCaseObjectKeys(this.responseHeaders)\n  }\n\n  /**\n   * Utility method to get a header value by name\n   */\n  public header<T extends string | number | boolean>(name: string): T | undefined {\n    const key = name.toLowerCase()\n\n    if (key in this.headers()) {\n      return this.headers()[key] as T\n    }\n\n    return undefined\n  }\n\n  /**\n   * Returns the original response data\n   */\n  public rawData() {\n    return this.responseData\n  }\n\n  /**\n   * Returns the response data, if \"Content-Type\" is \"application/json\"\n   * it parses the response and returns an object.\n   * Friendly reminder:\n   *  - JSON.parse() can return null, an Array or an object.\n   */\n  public data<DataType extends object | string | null>(): DataType {\n    if (this.isContentTypeJSON() && this.responseData !== null) {\n      try {\n        return JSON.parse(this.responseData) as DataType\n      } catch (e) {} // eslint-disable-line no-empty\n    }\n\n    return this.responseData as DataType\n  }\n\n  public isContentTypeJSON() {\n    const contentType = this.header<string>('content-type')\n\n    if (contentType === undefined) {\n      return false\n    }\n\n    return REGEXP_CONTENT_TYPE_JSON.test(contentType)\n  }\n\n  /**\n   * Returns the last error instance that caused the request to fail\n   */\n  public error() {\n    const lastError = this.errors[this.errors.length - 1] || null\n\n    if (typeof lastError === 'string') {\n      return new Error(lastError)\n    }\n\n    return lastError\n  }\n\n  /**\n   * Enhances current Response returning a new Response\n   *\n   * @param {Object} extras\n   *   @param {Integer} extras.status - it will replace the current status\n   *   @param {String} extras.rawData - it will replace the current rawData\n   *   @param {Object} extras.headers - it will be merged with current headers\n   *   @param {Error} extras.error    - it will be added to the list of errors\n   */\n  public enhance(extras: ResponseParams) {\n    const mergedHeaders = { ...this.headers(), ...(extras.headers || {}) }\n    const enhancedResponse = new Response(\n      this.request(),\n      extras.status || this.status(),\n      extras.rawData || this.rawData() || undefined,\n      mergedHeaders,\n      extras.error ? [...this.errors, extras.error] : [...this.errors]\n    )\n    enhancedResponse.timeElapsed = this.timeElapsed\n\n    return enhancedResponse\n  }\n}\n\nexport default Response\n","import type { Primitive, Hash } from './types'\n\nlet _process: NodeJS.Process,\n  getNanoSeconds: (() => number) | undefined,\n  loadTime: number | undefined\n\ntry {\n  // eslint-disable-next-line no-eval\n  _process = eval(\n    'typeof __TEST_WEB__ === \"undefined\" && typeof process === \"object\" ? process : undefined'\n  )\n} catch (e) {} // eslint-disable-line no-empty\n\nconst hasProcessHrtime = () => {\n  return typeof _process !== 'undefined' && _process !== null && _process.hrtime\n}\n\nif (hasProcessHrtime()) {\n  getNanoSeconds = () => {\n    const hr = _process.hrtime()\n    return hr[0] * 1e9 + hr[1]\n  }\n  loadTime = getNanoSeconds()\n}\n\nconst R20 = /%20/g\n\nconst isNeitherNullNorUndefined = <T>(x: T | undefined | null): x is T =>\n  x !== null && x !== undefined\n\nexport const validKeys = (entry: Record<string, object | Primitive | undefined | null>) =>\n  Object.keys(entry).filter((key) => isNeitherNullNorUndefined(entry[key]))\n\nexport const buildRecursive = (\n  key: string,\n  value: Primitive | Primitive[] | Record<string, Primitive>,\n  suffix = ''\n): string => {\n  if (Array.isArray(value)) {\n    return value.map((v) => buildRecursive(key, v, suffix + '[]')).join('&')\n  }\n\n  if (typeof value !== 'object') {\n    return `${encodeURIComponent(key + suffix)}=${encodeURIComponent(value)}`\n  }\n\n  return validKeys(value)\n    .map((k) => buildRecursive(key, value[k], suffix + '[' + k + ']'))\n    .join('&')\n}\n\nexport const toQueryString = (\n  entry: Primitive | undefined | null | Record<string, object | Primitive | undefined | null>\n) => {\n  if (!isPlainObject(entry)) {\n    return entry\n  }\n\n  return validKeys(entry)\n    .map((key) => buildRecursive(key, entry[key] as Primitive))\n    .join('&')\n    .replace(R20, '+')\n}\n\n/**\n * Gives time in milliseconds, but with sub-millisecond precision for Browser\n * and Nodejs\n */\nexport const performanceNow = () => {\n  if (hasProcessHrtime() && getNanoSeconds !== undefined) {\n    const now = getNanoSeconds()\n    if (now !== undefined && loadTime !== undefined) {\n      return (now - loadTime) / 1e6\n    }\n  }\n\n  return Date.now()\n}\n\n/**\n * borrowed from: {@link https://gist.github.com/monsur/706839}\n * XmlHttpRequest's getAllResponseHeaders() method returns a string of response\n * headers according to the format described here:\n * {@link http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders-method}\n * This method parses that string into a user-friendly key/value pair object.\n */\nexport const parseResponseHeaders = (headerStr: string) => {\n  const headers: Hash = {}\n  if (!headerStr) {\n    return headers\n  }\n\n  const headerPairs = headerStr.split('\\u000d\\u000a')\n  for (let i = 0; i < headerPairs.length; i++) {\n    const headerPair = headerPairs[i]\n    // Can't use split() here because it does the wrong thing\n    // if the header value has the string \": \" in it.\n    const index = headerPair.indexOf('\\u003a\\u0020')\n    if (index > 0) {\n      const key = headerPair.substring(0, index).toLowerCase().trim()\n      const val = headerPair.substring(index + 2).trim()\n      headers[key] = val\n    }\n  }\n  return headers\n}\n\nexport const lowerCaseObjectKeys = (obj: Hash) => {\n  return Object.keys(obj).reduce((target, key) => {\n    target[key.toLowerCase()] = obj[key]\n    return target\n  }, {} as Hash)\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nexport const assign =\n  Object.assign ||\n  function (target: Hash) {\n    for (let i = 1; i < arguments.length; i++) {\n      // eslint-disable-next-line prefer-rest-params\n      const source = arguments[i]\n      for (const key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          target[key] = source[key]\n        }\n      }\n    }\n    return target\n  }\n\nconst toString = Object.prototype.toString\nexport const isPlainObject = (value: unknown): value is object => {\n  return (\n    toString.call(value) === '[object Object]' &&\n    Object.getPrototypeOf(value) === Object.getPrototypeOf({})\n  )\n}\n\n/**\n * borrowed from: {@link https://github.com/davidchambers/Base64.js}\n */\nconst CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\nexport const btoa = (input: object | Primitive | null) => {\n  let output = ''\n  let map = CHARS\n  const str = String(input)\n  for (\n    // initialize result and counter\n    let block = 0, charCode: number, idx = 0;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || ((map = '='), idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & (block >> (8 - (idx % 1) * 8)))\n  ) {\n    charCode = str.charCodeAt((idx += 3 / 4))\n    if (charCode > 0xff) {\n      throw new Error(\n        \"[Mappersmith] 'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\"\n      )\n    }\n    block = (block << 8) | charCode\n  }\n  return output\n}\n","/* (ignored) */"],"sourceRoot":""}