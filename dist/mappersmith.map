{"version":3,"sources":["webpack://mappersmith/webpack/universalModuleDefinition","webpack://mappersmith/./src/utils.ts","webpack://mappersmith/./src/method-descriptor.js","webpack://mappersmith/./src/manifest.js","webpack://mappersmith/./src/request.js","webpack://mappersmith/./src/client-builder.js","webpack://mappersmith/./src/mappersmith.js","webpack://mappersmith/./src/index.js","webpack://mappersmith/./src/response.js","webpack://mappersmith/./src/gateway/timeout-error.js","webpack://mappersmith/./src/gateway.js","webpack://mappersmith/./src/gateway/xhr.js","webpack://mappersmith/webpack/bootstrap"],"names":["root","factory","exports","module","define","amd","window","_process","getNanoSeconds","loadTime","eval","e","hasProcessHrtime","hrtime","hr","R20","isNeitherNullNorUndefined","x","validKeys","entry","Object","keys","filter","key","buildRecursive","value","suffix","Array","isArray","map","v","join","encodeURIComponent","k","toQueryString","isPlainObject","replace","performanceNow","undefined","now","Date","parseResponseHeaders","headerStr","headers","headerPairs","split","i","length","headerPair","index","indexOf","substring","toLowerCase","trim","val","lowerCaseObjectKeys","obj","reduce","target","hasOwnProperty","prototype","assign","arguments","source","call","toString","getPrototypeOf","CHARS","btoa","input","charCode","output","str","String","block","idx","charAt","charCodeAt","Error","MethodDescriptor","this","host","allowResourceHostOverride","path","method","params","queryParamAlias","binary","bodyAttr","headersAttr","authAttr","timeoutAttr","hostAttr","resourceMiddleware","middleware","middlewares","Manifest","gatewayConfigs","context","clientId","resources","clientMiddleware","ignoreGlobalMiddleware","eachResource","callback","forEach","resourceName","methods","eachMethod","methodName","name","descriptor","createMethodDescriptor","definition","createMiddleware","args","resourceMethod","middlewareFactory","__name","response","next","prepareRequest","request","then","req","REGEXP_DYNAMIC_SEGMENT","REGEXP_OPTIONAL_DYNAMIC_SEGMENT","REGEXP_TRAILING_SLASH","Request","methodDescriptor","requestParams","match","regexp","RegExp","dynamicSegmentKeys","exec","push","pattern","missingDynamicSegmentMatch","aliasedParams","aliased","queryString","hasQuery","includes","pathTemplate","url","header","body","auth","timeout","enhance","extras","headerKey","bodyKey","authKey","timeoutKey","hostKey","isBinary","ClientBuilder","manifest","GatewayClassFactory","configs","Promise","maxMiddlewareStackExecutionAllowed","build","client","_manifest","buildResource","resource","invokeMiddlewares","initialRequest","executeMiddlewareStack","returnedInvalidRequest","requestPhaseFailureContext","abortExecution","error","message","stack","finalRequest","executions","renew","GatewayClass","execute","abort","resolve","typeValue","prettyType","reject","version","fetch","gateway","emulateHTTP","enableHTTP408OnTimeouts","XHR","withCredentials","configure","HTTP","useSocketConnectionTimeout","onRequestWillStart","onRequestSocketAssigned","onSocketLookup","onSocketConnect","onSocketSecureConnect","onResponseReadable","onResponseEnd","Fetch","credentials","setContext","console","warn","forge","lib","require","defaultGateway","XMLHttpRequest","REGEXP_CONTENT_TYPE_JSON","Response","originalRequest","responseStatus","responseData","responseHeaders","errors","maskedAuth","password","timeElapsed","status","success","rawData","data","isContentTypeJSON","JSON","parse","test","lastError","enhancedResponse","createTimeoutError","REGEXP_EMULATE_HTTP","Gateway","successCallback","failCallback","options","shouldEmulateHTTP","timeStart","defaultConfigs","apply","dispatchClientError","dispatchResponse","prepareBody","_method","bodyString","toBase64","get","xmlHttpRequest","createXHR","open","setHeaders","configureTimeout","configureBinary","send","head","post","performRequest","put","patch","responseType","canceled","timer","addEventListener","clearTimeout","setTimeout","configureCallbacks","createResponse","errorMessage","enhancedMessage","guessedErrorCause","responseText","xhrOptions","requestMethod","toUpperCase","customHeaders","getAllResponseHeaders","username","headerName","setRequestHeader","installedModules","__webpack_require__","m","modules","c","d","getter","o","defineProperty","enumerable","r","Symbol","toStringTag","t","mode","__esModule","ns","create","bind","n","object","property","p","s","moduleId","l"],"mappings":"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","file":"mappersmith.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mappersmith\"] = factory();\n\telse\n\t\troot[\"mappersmith\"] = factory();\n})(window, function() {\nreturn ","let _process: NodeJS.Process, getNanoSeconds: (() => number) | undefined, loadTime: number | undefined\ntry { _process = eval('typeof __TEST_WEB__ === \"undefined\" && typeof process === \"object\" ? process : undefined') } catch (e) {} // eslint-disable-line no-eval\n\nconst hasProcessHrtime = () => {\n  return (typeof _process !== 'undefined' && _process !== null) && _process.hrtime\n}\n\nif (hasProcessHrtime()) {\n  getNanoSeconds = () => {\n    const hr = _process.hrtime()\n    return hr[0] * 1e9 + hr[1]\n  }\n  loadTime = getNanoSeconds()\n}\n\nconst R20 = /%20/g\n\nconst isNeitherNullNorUndefined = <T>(x: T | undefined | null): x is T =>\n  x !== null && x !== undefined\n\nexport const validKeys = (entry: Record<string, unknown>) => Object\n  .keys(entry)\n  .filter((key) => isNeitherNullNorUndefined(entry[key]))\n\ntype Primitive = string | number | boolean\nexport const buildRecursive = (key: string, value: Primitive | Primitive[] | Record<string, Primitive>, suffix = ''): string => {\n  if (Array.isArray(value)) {\n    return value\n      .map((v) => buildRecursive(key, v, suffix + '[]'))\n      .join('&')\n  }\n\n  if (typeof value !== 'object') {\n    return `${encodeURIComponent(key + suffix)}=${encodeURIComponent(value)}`\n  }\n\n  return validKeys(value)\n    .map((k) => buildRecursive(key, value[k], suffix + '[' + k + ']'))\n    .join('&')\n}\n\nexport const toQueryString = (entry: string | Record<string, Primitive>) => {\n  if (!isPlainObject(entry)) {\n    return entry\n  }\n\n  return validKeys(entry)\n    .map((key) => buildRecursive(key, entry[key]))\n    .join('&')\n    .replace(R20, '+')\n}\n\n/**\n * Gives time in miliseconds, but with sub-milisecond precision for Browser\n * and Nodejs\n */\nexport const performanceNow = () => {\n  if (hasProcessHrtime() && getNanoSeconds !== undefined) {\n    const now = getNanoSeconds()\n    if (now !== undefined && loadTime !== undefined) {\n      return (now - loadTime) / 1e6\n    }\n  }\n\n  return Date.now()\n}\n\n/**\n * borrowed from: {@link https://gist.github.com/monsur/706839}\n * XmlHttpRequest's getAllResponseHeaders() method returns a string of response\n * headers according to the format described here:\n * {@link http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders-method}\n * This method parses that string into a user-friendly key/value pair object.\n */\nexport const parseResponseHeaders = (headerStr: string) => {\n  const headers: Record<string, unknown> = {}\n  if (!headerStr) {\n    return headers\n  }\n\n  const headerPairs = headerStr.split('\\u000d\\u000a')\n  for (let i = 0; i < headerPairs.length; i++) {\n    const headerPair = headerPairs[i]\n    // Can't use split() here because it does the wrong thing\n    // if the header value has the string \": \" in it.\n    const index = headerPair.indexOf('\\u003a\\u0020')\n    if (index > 0) {\n      const key = headerPair.substring(0, index).toLowerCase().trim()\n      const val = headerPair.substring(index + 2).trim()\n      headers[key] = val\n    }\n  }\n  return headers\n}\n\nexport const lowerCaseObjectKeys = (obj: Record<string, unknown>) => {\n  return Object\n    .keys(obj)\n    .reduce((target, key) => {\n      target[key.toLowerCase()] = obj[key]\n      return target\n    }, {} as Record<string, unknown>)\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nexport const assign = Object.assign || function (target: Record<string, unknown>) {\n  for (let i = 1; i < arguments.length; i++) {\n    const source = arguments[i]\n    for (let key in source) {\n      if (hasOwnProperty.call(source, key)) {\n        target[key] = source[key]\n      }\n    }\n  }\n  return target\n}\n\nconst toString = Object.prototype.toString\nexport const isPlainObject = (value: unknown): value is Record<string, unknown> => {\n  return toString.call(value) === '[object Object]' &&\n    Object.getPrototypeOf(value) === Object.getPrototypeOf({})\n}\n\n/**\n * borrowed from: {@link https://github.com/davidchambers/Base64.js}\n */\nconst CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\nexport const btoa = (input: string) => {\n  let output = ''\n  let map = CHARS\n  const str = String(input)\n  for (\n    // initialize result and counter\n    let block = 0, charCode: number, idx = 0;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4)\n    if (charCode > 0xFF) {\n      throw new Error(\"[Mappersmith] 'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\")\n    }\n    block = block << 8 | charCode\n  }\n  return output\n}\n","/**\n * @typedef MethodDescriptor\n * @param {Object} obj\n *   @param {String} obj.host\n *   @param {boolean} obj.allowResourceHostOverride\n *   @param {String|Function} obj.path\n *   @param {String} obj.method\n *   @param {Object} obj.headers\n *   @param {Object} obj.params\n *   @param {Object} obj.queryParamAlias\n *   @param {String} obj.bodyAttr - body attribute name. Default: 'body'\n *   @param {String} obj.headersAttr - headers attribute name. Default: 'headers'\n *   @param {String} obj.authAttr - auth attribute name. Default: 'auth'\n *   @param {Number} obj.timeoutAttr - timeout attribute name. Default: 'timeout'\n *   @param {String} obj.hostAttr - host attribute name. Default: 'host'\n */\nexport default function MethodDescriptor (obj) {\n  this.host = obj.host\n  this.allowResourceHostOverride = obj.allowResourceHostOverride || false\n  this.path = obj.path\n  this.method = obj.method || 'get'\n  this.headers = obj.headers\n  this.params = obj.params\n  this.queryParamAlias = obj.queryParamAlias || {}\n  this.binary = obj.binary || false\n\n  this.bodyAttr = obj.bodyAttr || 'body'\n  this.headersAttr = obj.headersAttr || 'headers'\n  this.authAttr = obj.authAttr || 'auth'\n  this.timeoutAttr = obj.timeoutAttr || 'timeout'\n  this.hostAttr = obj.hostAttr || 'host'\n\n  const resourceMiddleware = obj.middleware || obj.middlewares || []\n  this.middleware = resourceMiddleware\n}\n","import MethodDescriptor from './method-descriptor'\nimport { assign } from './utils'\n\n/**\n * @typedef Manifest\n * @param {Object} obj\n *   @param {String} obj.host\n *   @param {boolean} obj.allowResourceHostOverride - default: false\n *   @param {Object} obj.gatewayConfigs - default: base values from mappersmith\n *   @param {Object} obj.ignoreGlobalMiddleware - default: false\n *   @param {Object} obj.resources - default: {}\n *   @param {Array}  obj.middleware or obj.middlewares - default: []\n * @param {Object} globalConfigs\n */\nfunction Manifest (obj, { gatewayConfigs = null, middleware = [], context = {} }) {\n  this.host = obj.host\n  this.allowResourceHostOverride = obj.allowResourceHostOverride || false\n  this.bodyAttr = obj.bodyAttr\n  this.headersAttr = obj.headersAttr\n  this.authAttr = obj.authAttr\n  this.timeoutAttr = obj.timeoutAttr\n  this.hostAttr = obj.hostAttr\n  this.clientId = obj.clientId || null\n  this.gatewayConfigs = assign({}, gatewayConfigs, obj.gatewayConfigs)\n  this.resources = obj.resources || {}\n  this.context = context\n\n  const clientMiddleware = obj.middleware || obj.middlewares || []\n\n  // TODO: deprecate obj.middlewares in favor of obj.middleware\n  if (obj.ignoreGlobalMiddleware) {\n    this.middleware = clientMiddleware\n  } else {\n    this.middleware = [...clientMiddleware, ...middleware]\n  }\n}\n\nManifest.prototype = {\n  eachResource (callback) {\n    Object.keys(this.resources).forEach(resourceName => {\n      const methods = this.eachMethod(resourceName, methodName => ({\n        name: methodName,\n        descriptor: this.createMethodDescriptor(resourceName, methodName)\n      }))\n\n      callback(resourceName, methods)\n    })\n  },\n\n  eachMethod (resourceName, callback) {\n    return Object.keys(this.resources[resourceName]).map(callback)\n  },\n\n  createMethodDescriptor (resourceName, methodName) {\n    const definition = this.resources[resourceName][methodName]\n\n    if (!definition || !definition.path) {\n      throw new Error(\n        `[Mappersmith] path is undefined for resource \"${resourceName}\" method \"${methodName}\"`\n      )\n    }\n\n    return new MethodDescriptor(\n      assign(\n        {\n          host: this.host,\n          allowResourceHostOverride: this.allowResourceHostOverride,\n          bodyAttr: this.bodyAttr,\n          headersAttr: this.headersAttr,\n          authAttr: this.authAttr,\n          timeoutAttr: this.timeoutAttr,\n          hostAttr: this.hostAttr\n        },\n        definition\n      )\n    )\n  },\n\n  /**\n   * @param {Object} args\n   *   @param {String|Null} args.clientId\n   *   @param {String} args.resourceName\n   *   @param {String} args.resourceMethod\n   *   @param {Object} args.context\n   *   @param {Boolean} args.mockRequest\n   *\n   * @return {Array<Object>}\n   */\n  createMiddleware (args = {}) {\n    const createInstance = middlewareFactory =>\n      assign(\n        {\n          __name: middlewareFactory.name || middlewareFactory.toString(),\n          response (next) {\n            return next()\n          },\n          /**\n           * @since 2.27.0\n           * Replaced the request method\n           */\n          prepareRequest (next) {\n            return this.request ? next().then(req => this.request(req)) : next()\n          }\n        },\n        middlewareFactory(\n          assign(args, {\n            clientId: this.clientId,\n            context: assign({}, this.context)\n          })\n        )\n      )\n\n    const { resourceName: name, resourceMethod: method } = args\n    const resourceMiddleware = this.createMethodDescriptor(name, method).middleware\n    const middlewares = [...resourceMiddleware, ...this.middleware]\n\n    return middlewares.map(createInstance)\n  }\n}\n\nexport default Manifest\n","import { toQueryString, lowerCaseObjectKeys, assign } from './utils'\n\nconst REGEXP_DYNAMIC_SEGMENT = /{([^}?]+)\\??}/\nconst REGEXP_OPTIONAL_DYNAMIC_SEGMENT = /\\/?{([^}?]+)\\?}/g\nconst REGEXP_TRAILING_SLASH = /\\/$/\n\n/**\n * @typedef Request\n * @param {MethodDescriptor} methodDescriptor\n * @param {Object} requestParams, defaults to an empty object ({})\n */\nfunction Request (methodDescriptor, requestParams) {\n  this.methodDescriptor = methodDescriptor\n  this.requestParams = requestParams || {}\n}\n\nRequest.prototype = {\n  /**\n   * @return {Object}\n   */\n  params () {\n    const params = assign(\n      {},\n      this.methodDescriptor.params,\n      this.requestParams\n    )\n\n    const isParam = (key) => (\n      key !== this.methodDescriptor.headersAttr &&\n        key !== this.methodDescriptor.bodyAttr &&\n        key !== this.methodDescriptor.authAttr &&\n        key !== this.methodDescriptor.timeoutAttr &&\n        key !== this.methodDescriptor.hostAttr\n    )\n\n    return Object\n      .keys(params)\n      .reduce((obj, key) => {\n        if (isParam(key)) {\n          obj[key] = params[key]\n        }\n        return obj\n      }, {})\n  },\n\n  /**\n   * Returns the HTTP method in lowercase\n   *\n   * @return {String}\n   */\n  method () {\n    return this.methodDescriptor.method.toLowerCase()\n  },\n\n  /**\n   * Returns host name without trailing slash\n   * Example: http://example.org\n   *\n   * @return {String}\n   */\n  host () {\n    const { allowResourceHostOverride, hostAttr, host } = this.methodDescriptor\n    const originalHost = allowResourceHostOverride\n      ? this.requestParams[hostAttr] || host || ''\n      : host || ''\n\n    return originalHost.replace(REGEXP_TRAILING_SLASH, '')\n  },\n\n  /**\n   * Returns path with parameters and leading slash.\n   * Example: /some/path?param1=true\n   *\n   * @throws {Error} if any dynamic segment is missing.\n   * Example:\n   * Imagine the path '/some/{name}', the error will be similar to:\n   * '[Mappersmith] required parameter missing (name), \"/some/{name}\" cannot be resolved'\n   *\n   * @return {String}\n   */\n  path () {\n    const params = this.params()\n\n    let path\n\n    if (typeof this.methodDescriptor.path === 'function') {\n      path = this.methodDescriptor.path(params)\n    } else {\n      path = this.methodDescriptor.path\n    }\n\n    if (path[0] !== '/') {\n      path = `/${path}`\n    }\n\n    // RegExp with 'g'-flag is stateful, therefore defining it locally\n    const regexp = new RegExp(REGEXP_DYNAMIC_SEGMENT, 'g')\n\n    const dynamicSegmentKeys = []\n    let match\n    while ((match = regexp.exec(path)) !== null) {\n      dynamicSegmentKeys.push(match[1])\n    }\n\n    for (let key of dynamicSegmentKeys) {\n      const pattern = new RegExp(`{${key}\\\\??}`, 'g')\n      if (params[key] != null) {\n        path = path.replace(pattern, encodeURIComponent(params[key]))\n        delete params[key]\n      }\n    }\n\n    path = path.replace(REGEXP_OPTIONAL_DYNAMIC_SEGMENT, '')\n\n    const missingDynamicSegmentMatch = path.match(REGEXP_DYNAMIC_SEGMENT)\n    if (missingDynamicSegmentMatch) {\n      throw new Error(\n        `[Mappersmith] required parameter missing (${missingDynamicSegmentMatch[1]}), \"${path}\" cannot be resolved`\n      )\n    }\n\n    const aliasedParams = Object.keys(params).reduce((aliased, key) => {\n      const aliasedKey = this.methodDescriptor.queryParamAlias[key] || key\n      aliased[aliasedKey] = params[key]\n      return aliased\n    }, {})\n\n    const queryString = toQueryString(aliasedParams)\n    if (queryString.length !== 0) {\n      const hasQuery = path.includes('?')\n      path += `${hasQuery ? '&' : '?'}${queryString}`\n    }\n\n    return path\n  },\n\n  /**\n   * Returns the template path, without params, before interpolation.\n   * If path is a function, returns the result of request.path()\n   * Example: /some/{param}/path\n   *\n   * @return {String|Function}\n   */\n  pathTemplate () {\n    let path = this.methodDescriptor.path\n\n    if (typeof this.methodDescriptor.path !== 'function' && path[0] !== '/') {\n      path = `/${path}`\n    }\n\n    return path\n  },\n\n  /**\n   * Returns the full URL\n   * Example: http://example.org/some/path?param1=true\n   *\n   * @return {String}\n   */\n  url () {\n    return `${this.host()}${this.path()}`\n  },\n\n  /**\n   * Returns an object with the headers. Header names are converted to\n   * lowercase\n   *\n   * @return {Object}\n   */\n  headers () {\n    return lowerCaseObjectKeys(\n      assign(\n        {},\n        this.methodDescriptor.headers,\n        this.requestParams[this.methodDescriptor.headersAttr]\n      )\n    )\n  },\n\n  /**\n   * Utility method to get a header value by name\n   *\n   * @param {String} name\n   *\n   * @return {String|Undefined}\n   */\n  header (name) {\n    return this.headers()[name.toLowerCase()]\n  },\n\n  body () {\n    return this.requestParams[this.methodDescriptor.bodyAttr]\n  },\n\n  auth () {\n    return this.requestParams[this.methodDescriptor.authAttr]\n  },\n\n  timeout () {\n    return this.requestParams[this.methodDescriptor.timeoutAttr]\n  },\n\n  /**\n   * Enhances current request returning a new Request\n   * @param {Object} extras\n   *   @param {Object} extras.params - it will be merged with current params\n   *   @param {Object} extras.headers - it will be merged with current headers\n   *   @param {String|Object} extras.body - it will replace the current body\n   *   @param {Object} extras.auth - it will replace the current auth\n   *   @param {Number} extras.timeout - it will replace the current timeout\n   *   @param {String} extras.host - it will replace the current timeout\n   */\n  enhance (extras) {\n    const headerKey = this.methodDescriptor.headersAttr\n    const bodyKey = this.methodDescriptor.bodyAttr\n    const authKey = this.methodDescriptor.authAttr\n    const timeoutKey = this.methodDescriptor.timeoutAttr\n    const hostKey = this.methodDescriptor.hostAttr\n    const requestParams = assign({}, this.requestParams, extras.params)\n\n    requestParams[headerKey] = assign({}, this.requestParams[headerKey], extras.headers)\n    extras.body && (requestParams[bodyKey] = extras.body)\n    extras.auth && (requestParams[authKey] = extras.auth)\n    extras.timeout && (requestParams[timeoutKey] = extras.timeout)\n    extras.host && (requestParams[hostKey] = extras.host)\n\n    return new Request(this.methodDescriptor, requestParams)\n  },\n\n  /**\n   * Is the request expecting a binary response?\n   *\n   * @return {Boolean}\n   */\n  isBinary () {\n    return this.methodDescriptor.binary\n  }\n}\n\nexport default Request\n","import Manifest from './manifest'\nimport Request from './request'\nimport { assign } from './utils'\n\n/**\n * @typedef ClientBuilder\n * @param {Object} manifest - manifest definition with at least the `resources` key\n * @param {Function} GatewayClassFactory - factory function that returns a gateway class\n */\nfunction ClientBuilder (manifest, GatewayClassFactory, configs) {\n  if (!manifest) {\n    throw new Error(\n      `[Mappersmith] invalid manifest (${manifest})`\n    )\n  }\n\n  if (!GatewayClassFactory || !GatewayClassFactory()) {\n    throw new Error(\n      '[Mappersmith] gateway class not configured (configs.gateway)'\n    )\n  }\n\n  this.Promise = configs.Promise\n  this.manifest = new Manifest(manifest, configs)\n  this.GatewayClassFactory = GatewayClassFactory\n  this.maxMiddlewareStackExecutionAllowed = configs.maxMiddlewareStackExecutionAllowed\n}\n\nClientBuilder.prototype = {\n  build () {\n    const client = { _manifest: this.manifest }\n\n    this.manifest.eachResource((name, methods) => {\n      client[name] = this.buildResource(name, methods)\n    })\n\n    return client\n  },\n\n  buildResource (resourceName, methods) {\n    return methods.reduce((resource, method) => assign(resource, {\n      [method.name]: (requestParams) => {\n        const request = new Request(method.descriptor, requestParams)\n        return this.invokeMiddlewares(resourceName, method.name, request)\n      }\n    }), {})\n  },\n\n  invokeMiddlewares (resourceName, resourceMethod, initialRequest) {\n    const middleware = this.manifest.createMiddleware({ resourceName, resourceMethod })\n    const GatewayClass = this.GatewayClassFactory()\n    const gatewayConfigs = this.manifest.gatewayConfigs\n    const requestPhaseFailureContext = {\n      middleware: null,\n      returnedInvalidRequest: false,\n      abortExecution: false\n    }\n\n    const getInitialRequest = () => this.Promise.resolve(initialRequest)\n    const chainRequestPhase = (next, middleware) => () => {\n      const abort = (error) => {\n        requestPhaseFailureContext.abortExecution = true\n        throw error\n      }\n\n      return this.Promise\n        .resolve()\n        .then(() => middleware.prepareRequest(next, abort))\n        .then(request => {\n          if (request instanceof Request) {\n            return request\n          }\n\n          requestPhaseFailureContext.returnedInvalidRequest = true\n          const typeValue = typeof request\n          const prettyType = (typeValue === 'object' || typeValue === 'function')\n            ? request.name || typeValue\n            : typeValue\n\n          throw new Error(`[Mappersmith] middleware \"${middleware.__name}\" should return \"Request\" but returned \"${prettyType}\"`)\n        })\n        .catch(e => {\n          requestPhaseFailureContext.middleware = middleware.__name\n          throw e\n        })\n    }\n\n    const prepareRequest = middleware.reduce(chainRequestPhase, getInitialRequest)\n    let executions = 0\n\n    const executeMiddlewareStack = () => prepareRequest()\n      .catch(e => {\n        const { returnedInvalidRequest, abortExecution, middleware } = requestPhaseFailureContext\n        if (returnedInvalidRequest || abortExecution) {\n          throw e\n        }\n\n        const error = new Error(`[Mappersmith] middleware \"${middleware}\" failed in the request phase: ${e.message}`)\n        error.stack = e.stack\n        throw error\n      })\n      .then(finalRequest => {\n        executions++\n\n        if (executions > this.maxMiddlewareStackExecutionAllowed) {\n          throw new Error(\n            `[Mappersmith] infinite loop detected (middleware stack invoked ${executions} times). Check the use of \"renew\" in one of the middleware.`\n          )\n        }\n\n        const renew = executeMiddlewareStack\n        const chainResponsePhase = (next, middleware) => () => middleware.response(next, renew)\n        const callGateway = () => new GatewayClass(finalRequest, gatewayConfigs).call()\n        const execute = middleware.reduce(chainResponsePhase, callGateway)\n        return execute()\n      })\n\n    return new this.Promise((resolve, reject) => {\n      executeMiddlewareStack()\n        .then(response => resolve(response))\n        .catch(reject)\n    })\n  }\n}\n\nexport default ClientBuilder\n","/* global VERSION */\nimport ClientBuilder from './client-builder'\nimport { assign } from './utils'\n\nexport const version = VERSION\n\nexport const configs = {\n  context: {},\n  middleware: [],\n  Promise: typeof Promise === 'function' ? Promise : null,\n  fetch: typeof fetch === 'function' ? fetch : null, // eslint-disable-line no-undef\n\n  /**\n   * The maximum amount of executions allowed before it is considered an infinite loop.\n   * In the response phase of middleware, it's possible to execute a function called \"renew\",\n   * which can be used to rerun the middleware stack. This feature is useful in some scenarios,\n   * for example, re-fetching an invalid access token.\n\n   * This configuration is used to detect infinite loops, don't increase this value too much\n   * @default 2\n   */\n  maxMiddlewareStackExecutionAllowed: 2,\n\n  /**\n   * Gateway implementation, it defaults to \"lib/gateway/xhr\" for browsers and\n   * \"lib/gateway/http\" for node\n   */\n  gateway: null,\n  gatewayConfigs: {\n    /**\n     * Setting this option will fake PUT, PATCH and DELETE requests with a HTTP POST. It will\n     * add \"_method\" and \"X-HTTP-Method-Override\" with the original requested method\n     * @default false\n     */\n    emulateHTTP: false,\n\n    /**\n     * Setting this option will return HTTP status 408 (Request Timeout) when a request times\n     * out. When \"false\", HTTP status 400 (Bad Request) will be used instead.\n     * @default false\n     */\n    enableHTTP408OnTimeouts: false,\n\n    XHR: {\n      /**\n       * Indicates whether or not cross-site Access-Control requests should be made using credentials\n       * such as cookies, authorization headers or TLS client certificates.\n       * Setting withCredentials has no effect on same-site requests\n       *\n       * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n       *\n       * @default false\n       */\n      withCredentials: false,\n\n      /**\n       * For additional configurations to the XMLHttpRequest object.\n       * @param {XMLHttpRequest} xhr\n       * @default null\n       */\n      configure: null\n    },\n\n    HTTP: {\n      /**\n       * Enable this option to evaluate timeout on entire request durations,\n       * including DNS resolution and socket connection.\n       *\n       * See original nodejs issue: https://github.com/nodejs/node/pull/8101\n       *\n       * @default false\n       */\n      useSocketConnectionTimeout: false,\n      /**\n       * For additional configurations to the http/https module\n       * For http: https://nodejs.org/api/http.html#http_http_request_options_callback\n       * For https: https://nodejs.org/api/https.html#https_https_request_options_callback\n       *\n       * @param {object} options\n       * @default null\n       */\n      configure: null,\n      onRequestWillStart: null,\n      onRequestSocketAssigned: null,\n      onSocketLookup: null,\n      onSocketConnect: null,\n      onSocketSecureConnect: null,\n      onResponseReadable: null,\n      onResponseEnd: null\n    },\n\n    Fetch: {\n      /**\n       * Indicates whether the user agent should send cookies from the other domain in the case of cross-origin\n       * requests. This is similar to XHR’s withCredentials flag, but with three available values (instead of two):\n       *\n       * \"omit\": Never send cookies.\n       * \"same-origin\": Only send cookies if the URL is on the same origin as the calling script.\n       * \"include\": Always send cookies, even for cross-origin calls.\n       *\n       * https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials\n       *\n       * @default \"omit\"\n       */\n      credentials: 'omit'\n    }\n  }\n}\n\n/**\n * @deprecated Shouldn't be used, not safe for concurrent use.\n * @param {Object} context\n */\nexport const setContext = (context) => {\n  console.warn('The use of setContext is deprecated - you need to find another way to pass data between your middlewares.')\n  configs.context = assign(configs.context, context)\n}\n\n/**\n * @param {Object} manifest\n */\nexport default function forge (manifest) {\n  const GatewayClassFactory = () => configs.gateway\n  return new ClientBuilder(manifest, GatewayClassFactory, configs).build()\n}\n","var lib = require('./mappersmith')\nvar _process, defaultGateway\n\n// Prevents webpack to load the nodejs processs polyfill\ntry { _process = eval('typeof process === \"object\" ? process : undefined') } catch (e) {} // eslint-disable-line no-eval\n\nif (typeof XMLHttpRequest !== 'undefined') {\n  // For browsers use XHR adapter\n  defaultGateway = require('./gateway/xhr').default\n} else if (typeof _process !== 'undefined') {\n  // For node use HTTP adapter\n  defaultGateway = require('./gateway/http').default\n}\n\nlib.configs.gateway = defaultGateway\nmodule.exports = lib\n","import { lowerCaseObjectKeys, assign } from './utils'\n\nconst REGEXP_CONTENT_TYPE_JSON = /^application\\/(json|.*\\+json)/\n\n/**\n * @typedef Response\n * @param {Request} originalRequest, for auth it hides the password\n * @param {Integer} responseStatus\n * @param {String} responseData, defaults to null\n * @param {Object} responseHeaders, defaults to an empty object ({})\n * @param {Array<Error>} errors, defaults to an empty array ([])\n */\nfunction Response (originalRequest, responseStatus, responseData, responseHeaders, errors) {\n  if (originalRequest.requestParams && originalRequest.requestParams.auth) {\n    const maskedAuth = assign({}, originalRequest.requestParams.auth, { password: '***' })\n    this.originalRequest = originalRequest.enhance({ auth: maskedAuth })\n  } else {\n    this.originalRequest = originalRequest\n  }\n\n  this.responseStatus = responseStatus\n  this.responseData = responseData !== undefined ? responseData : null\n  this.responseHeaders = responseHeaders || {}\n  this.errors = errors || []\n  this.timeElapsed = null\n}\n\nResponse.prototype = {\n  /**\n   * @return {Request}\n   */\n  request () {\n    return this.originalRequest\n  },\n\n  /**\n   * @return {Integer}\n   */\n  status () {\n    // IE sends 1223 instead of 204\n    if (this.responseStatus === 1223) {\n      return 204\n    }\n\n    return this.responseStatus\n  },\n\n  /**\n   * Returns true if status is greater or equal 200 or lower than 400\n   *\n   * @return {Boolean}\n   */\n  success () {\n    const status = this.status()\n    return status >= 200 && status < 400\n  },\n\n  /**\n   * Returns an object with the headers. Header names are converted to\n   * lowercase\n   *\n   * @return {Object}\n   */\n  headers () {\n    return lowerCaseObjectKeys(this.responseHeaders)\n  },\n\n  /**\n   * Utility method to get a header value by name\n   *\n   * @param {String} name\n   *\n   * @return {String|Undefined}\n   */\n  header (name) {\n    return this.headers()[name.toLowerCase()]\n  },\n\n  /**\n   * Returns the original response data\n   */\n  rawData () {\n    return this.responseData\n  },\n\n  /**\n   * Returns the response data, if \"Content-Type\" is \"application/json\"\n   * it parses the response and returns an object\n   *\n   * @return {String|Object}\n   */\n  data () {\n    let data = this.responseData\n\n    if (this.isContentTypeJSON()) {\n      try { data = JSON.parse(this.responseData) } catch (e) {}\n    }\n\n    return data\n  },\n\n  isContentTypeJSON () {\n    return REGEXP_CONTENT_TYPE_JSON.test(this.headers()['content-type'])\n  },\n\n  /**\n   * Returns the last error instance that caused the request to fail\n   *\n   * @return {Error|null}\n   */\n  error () {\n    const lastError = this.errors[this.errors.length - 1] || null\n    if (typeof lastError === 'string') {\n      return new Error(lastError)\n    }\n\n    return lastError\n  },\n\n  /**\n   * Enhances current Response returning a new Response\n   *\n   * @param {Object} extras\n   *   @param {Integer} extras.status - it will replace the current status\n   *   @param {String} extras.rawData - it will replace the current rawData\n   *   @param {Object} extras.headers - it will be merged with current headers\n   *   @param {Error} extras.error    - it will be added to the list of errors\n   *\n   * @return {Response}\n   */\n  enhance (extras) {\n    const enhancedResponse = new Response(\n      this.request(),\n      extras.status || this.status(),\n      extras.rawData || this.rawData(),\n      assign({}, this.headers(), extras.headers),\n      extras.error ? [...this.errors, extras.error] : [...this.errors]\n    )\n    enhancedResponse.timeElapsed = this.timeElapsed\n\n    return enhancedResponse\n  }\n}\n\nexport default Response\n","export const isTimeoutError = (e) => {\n  return e && e.name === 'TimeoutError'\n}\n\nexport const createTimeoutError = (message) => {\n  const error = new Error(message)\n  error.name = 'TimeoutError'\n  return error\n}\n","import { performanceNow, assign, toQueryString, isPlainObject } from './utils'\nimport { configs as defaultConfigs } from './mappersmith'\nimport Response from './response'\nimport { isTimeoutError } from './gateway/timeout-error'\n\nconst REGEXP_EMULATE_HTTP = /^(delete|put|patch)/i\n\nfunction Gateway (request, configs = {}) {\n  this.request = request\n  this.configs = configs\n  this.successCallback = function () {}\n  this.failCallback = function () {}\n}\n\nGateway.extends = (methods) => assign({}, Gateway.prototype, methods)\n\nGateway.prototype = {\n  options () {\n    return this.configs\n  },\n\n  shouldEmulateHTTP () {\n    return this.options().emulateHTTP &&\n      REGEXP_EMULATE_HTTP.test(this.request.method())\n  },\n\n  call () {\n    const timeStart = performanceNow()\n    return new defaultConfigs.Promise((resolve, reject) => {\n      this.successCallback = (response) => {\n        response.timeElapsed = performanceNow() - timeStart\n        resolve(response)\n      }\n\n      this.failCallback = (response) => {\n        response.timeElapsed = performanceNow() - timeStart\n        reject(response)\n      }\n\n      try {\n        this[this.request.method()].apply(this, arguments)\n      } catch (e) {\n        this.dispatchClientError(e.message, e)\n      }\n    })\n  },\n\n  dispatchResponse (response) {\n    response.success()\n      ? this.successCallback(response)\n      : this.failCallback(response)\n  },\n\n  dispatchClientError (message, error) {\n    if (isTimeoutError(error) && this.options().enableHTTP408OnTimeouts) {\n      this.failCallback(new Response(this.request, 408, message, {}, [error]))\n    } else {\n      this.failCallback(new Response(this.request, 400, message, {}, [error]))\n    }\n  },\n\n  prepareBody (method, headers) {\n    let body = this.request.body()\n\n    if (this.shouldEmulateHTTP()) {\n      body = body || {}\n      isPlainObject(body) && (body._method = method)\n      headers['x-http-method-override'] = method\n    }\n\n    const bodyString = toQueryString(body)\n\n    if (bodyString) {\n      // If it's not simple, let the browser (or the user) set it\n      if (isPlainObject(body)) {\n        headers['content-type'] = 'application/x-www-form-urlencoded;charset=utf-8'\n      }\n    }\n\n    return bodyString\n  }\n}\n\nexport default Gateway\n","import Gateway from '../gateway'\nimport Response from '../response'\nimport { assign, parseResponseHeaders, btoa } from '../utils'\nimport { createTimeoutError } from './timeout-error'\n\nconst toBase64 = window.btoa || btoa\n\nfunction XHR (request) {\n  Gateway.apply(this, arguments)\n}\n\nXHR.prototype = Gateway.extends({\n  get () {\n    const xmlHttpRequest = this.createXHR()\n    xmlHttpRequest.open('GET', this.request.url(), true)\n    this.setHeaders(xmlHttpRequest, {})\n    this.configureTimeout(xmlHttpRequest)\n    this.configureBinary(xmlHttpRequest)\n    xmlHttpRequest.send()\n  },\n\n  head () {\n    const xmlHttpRequest = this.createXHR()\n    xmlHttpRequest.open('HEAD', this.request.url(), true)\n    this.setHeaders(xmlHttpRequest, {})\n    this.configureTimeout(xmlHttpRequest)\n    this.configureBinary(xmlHttpRequest)\n    xmlHttpRequest.send()\n  },\n\n  post () {\n    this.performRequest('post')\n  },\n\n  put () {\n    this.performRequest('put')\n  },\n\n  patch () {\n    this.performRequest('patch')\n  },\n\n  delete () {\n    this.performRequest('delete')\n  },\n\n  configureBinary (xmlHttpRequest) {\n    if (this.request.isBinary()) {\n      xmlHttpRequest.responseType = 'blob'\n    }\n  },\n\n  configureTimeout (xmlHttpRequest) {\n    this.canceled = false\n    this.timer = null\n\n    const timeout = this.request.timeout()\n\n    if (timeout) {\n      xmlHttpRequest.timeout = timeout\n      xmlHttpRequest.addEventListener('timeout', () => {\n        this.canceled = true\n        clearTimeout(this.timer)\n        const error = createTimeoutError(`Timeout (${timeout}ms)`)\n        this.dispatchClientError(error.message, error)\n      })\n\n      // PhantomJS doesn't support timeout for XMLHttpRequest\n      this.timer = setTimeout(() => {\n        this.canceled = true\n        const error = createTimeoutError(`Timeout (${timeout}ms)`)\n        this.dispatchClientError(error.message, error)\n      }, timeout + 1)\n    }\n  },\n\n  configureCallbacks (xmlHttpRequest) {\n    xmlHttpRequest.addEventListener('load', () => {\n      if (this.canceled) {\n        return\n      }\n\n      clearTimeout(this.timer)\n      this.dispatchResponse(this.createResponse(xmlHttpRequest))\n    })\n\n    xmlHttpRequest.addEventListener('error', (e) => {\n      if (this.canceled) {\n        return\n      }\n\n      clearTimeout(this.timer)\n      const guessedErrorCause = e\n        ? e.message || e.name\n        : xmlHttpRequest.responseText\n\n      const errorMessage = 'Network error'\n      const enhancedMessage = guessedErrorCause ? `: ${guessedErrorCause}` : ''\n      const error = new Error(`${errorMessage}${enhancedMessage}`)\n      this.dispatchClientError(errorMessage, error)\n    })\n\n    const xhrOptions = this.options().XHR\n    if (xhrOptions.withCredentials) {\n      xmlHttpRequest.withCredentials = true\n    }\n\n    if (xhrOptions.configure) {\n      xhrOptions.configure(xmlHttpRequest)\n    }\n  },\n\n  performRequest (method) {\n    const requestMethod = this.shouldEmulateHTTP() ? 'post' : method\n    const xmlHttpRequest = this.createXHR()\n    xmlHttpRequest.open(requestMethod.toUpperCase(), this.request.url(), true)\n\n    const customHeaders = {}\n    const body = this.prepareBody(method, customHeaders)\n    this.setHeaders(xmlHttpRequest, customHeaders)\n    this.configureTimeout(xmlHttpRequest)\n    this.configureBinary(xmlHttpRequest)\n\n    const args = []\n    body && args.push(body)\n\n    xmlHttpRequest.send.apply(xmlHttpRequest, args)\n  },\n\n  createResponse (xmlHttpRequest) {\n    const status = xmlHttpRequest.status\n    const data = this.request.isBinary() ? xmlHttpRequest.response : xmlHttpRequest.responseText\n    const responseHeaders = parseResponseHeaders(xmlHttpRequest.getAllResponseHeaders())\n    return new Response(\n      this.request,\n      status,\n      data,\n      responseHeaders\n    )\n  },\n\n  setHeaders (xmlHttpRequest, customHeaders) {\n    const auth = this.request.auth()\n    if (auth) {\n      const username = auth.username || ''\n      const password = auth.password || ''\n      customHeaders['authorization'] = `Basic ${toBase64(`${username}:${password}`)}`\n    }\n\n    const headers = assign(customHeaders, this.request.headers())\n    Object\n      .keys(headers)\n      .forEach((headerName) => {\n        xmlHttpRequest.setRequestHeader(headerName, headers[headerName])\n      })\n  },\n\n  createXHR () {\n    const xmlHttpRequest = new XMLHttpRequest() // eslint-disable-line no-undef\n    this.configureCallbacks(xmlHttpRequest)\n    return xmlHttpRequest\n  }\n})\n\nexport default XHR\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n"],"sourceRoot":""}