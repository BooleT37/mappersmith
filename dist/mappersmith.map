{"version":3,"sources":["webpack://mappersmith/webpack/universalModuleDefinition","webpack://mappersmith/./src/utils.ts","webpack://mappersmith/./src/method-descriptor.ts","webpack://mappersmith/./src/manifest.js","webpack://mappersmith/./src/request.ts","webpack://mappersmith/./src/client-builder.js","webpack://mappersmith/./src/mappersmith.js","webpack://mappersmith/./src/index.js","webpack://mappersmith/./src/response.js","webpack://mappersmith/./src/gateway/timeout-error.js","webpack://mappersmith/./src/gateway.js","webpack://mappersmith/./src/gateway/xhr.js","webpack://mappersmith/webpack/bootstrap"],"names":["root","factory","exports","module","define","amd","window","_process","getNanoSeconds","loadTime","eval","e","hasProcessHrtime","hrtime","hr","R20","isNeitherNullNorUndefined","x","validKeys","entry","Object","keys","filter","key","buildRecursive","value","suffix","Array","isArray","map","v","join","encodeURIComponent","k","toQueryString","isPlainObject","replace","performanceNow","undefined","now","Date","parseResponseHeaders","headerStr","headers","headerPairs","split","i","length","headerPair","index","indexOf","substring","toLowerCase","trim","val","lowerCaseObjectKeys","obj","reduce","target","hasOwnProperty","prototype","assign","arguments","source","call","toString","getPrototypeOf","CHARS","btoa","input","charCode","output","str","String","block","idx","charAt","charCodeAt","Error","MethodDescriptor","params","this","allowResourceHostOverride","disableParamsEncode","binary","host","method","path","queryParamAlias","authAttr","bodyAttr","headersAttr","hostAttr","timeoutAttr","resourceMiddleware","middleware","middlewares","Manifest","gatewayConfigs","context","clientId","resources","clientMiddleware","ignoreGlobalMiddleware","eachResource","callback","forEach","resourceName","methods","eachMethod","methodName","name","descriptor","createMethodDescriptor","definition","createMiddleware","args","resourceMethod","middlewareFactory","__name","response","next","prepareRequest","request","then","req","REGEXP_DYNAMIC_SEGMENT","REGEXP_OPTIONAL_DYNAMIC_SEGMENT","REGEXP_TRAILING_SLASH","Request","methodDescriptor","requestParams","originalHost","match","regexp","RegExp","dynamicSegmentKeys","exec","push","pattern","valueToReplace","missingDynamicSegmentMatch","aliasedParams","aliased","aliasedKey","queryString","hasQuery","includes","extras","authKey","bodyKey","headerKey","hostKey","timeoutKey","auth","body","timeout","ClientBuilder","manifest","GatewayClassFactory","configs","Promise","maxMiddlewareStackExecutionAllowed","build","client","_manifest","buildResource","resource","invokeMiddlewares","initialRequest","executeMiddlewareStack","returnedInvalidRequest","requestPhaseFailureContext","abortExecution","error","message","stack","finalRequest","executions","renew","GatewayClass","execute","abort","resolve","typeValue","prettyType","reject","version","fetch","gateway","emulateHTTP","enableHTTP408OnTimeouts","XHR","withCredentials","configure","HTTP","useSocketConnectionTimeout","onRequestWillStart","onRequestSocketAssigned","onSocketLookup","onSocketConnect","onSocketSecureConnect","onResponseReadable","onResponseEnd","Fetch","credentials","setContext","console","warn","forge","lib","require","defaultGateway","XMLHttpRequest","REGEXP_CONTENT_TYPE_JSON","Response","originalRequest","responseStatus","responseData","responseHeaders","errors","maskedAuth","password","enhance","timeElapsed","status","success","header","rawData","data","isContentTypeJSON","JSON","parse","test","lastError","enhancedResponse","createTimeoutError","REGEXP_EMULATE_HTTP","Gateway","successCallback","failCallback","options","shouldEmulateHTTP","timeStart","defaultConfigs","apply","dispatchClientError","dispatchResponse","prepareBody","_method","bodyString","toBase64","get","xmlHttpRequest","createXHR","open","url","setHeaders","configureTimeout","configureBinary","send","head","post","performRequest","put","patch","isBinary","responseType","canceled","timer","addEventListener","clearTimeout","setTimeout","configureCallbacks","createResponse","errorMessage","enhancedMessage","guessedErrorCause","responseText","xhrOptions","requestMethod","toUpperCase","customHeaders","getAllResponseHeaders","username","headerName","setRequestHeader","installedModules","__webpack_require__","m","modules","c","d","getter","o","defineProperty","enumerable","r","Symbol","toStringTag","t","mode","__esModule","ns","create","bind","n","object","property","p","s","moduleId","l"],"mappings":"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","file":"mappersmith.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"mappersmith\"] = factory();\n\telse\n\t\troot[\"mappersmith\"] = factory();\n})(window, function() {\nreturn ","// eslint-disable-next-line no-undef\nlet _process: NodeJS.Process, getNanoSeconds: (() => number) | undefined, loadTime: number | undefined\n// eslint-disable-next-line no-eval, no-empty\ntry { _process = eval('typeof __TEST_WEB__ === \"undefined\" && typeof process === \"object\" ? process : undefined') } catch (e) {}\n\nconst hasProcessHrtime = () => {\n  return (typeof _process !== 'undefined' && _process !== null) && _process.hrtime\n}\n\nif (hasProcessHrtime()) {\n  getNanoSeconds = () => {\n    const hr = _process.hrtime()\n    return hr[0] * 1e9 + hr[1]\n  }\n  loadTime = getNanoSeconds()\n}\n\nconst R20 = /%20/g\n\nconst isNeitherNullNorUndefined = <T>(x: T | undefined | null): x is T =>\n  x !== null && x !== undefined\n\nexport const validKeys = (entry: Record<string, unknown>) => Object\n  .keys(entry)\n  .filter((key) => isNeitherNullNorUndefined(entry[key]))\n\nexport type Primitive = string | number | boolean\nexport const buildRecursive = (key: string, value: Primitive | Primitive[] | Record<string, Primitive>, suffix = ''): string => {\n  if (Array.isArray(value)) {\n    return value\n      .map((v) => buildRecursive(key, v, suffix + '[]'))\n      .join('&')\n  }\n\n  if (typeof value !== 'object') {\n    return `${encodeURIComponent(key + suffix)}=${encodeURIComponent(value)}`\n  }\n\n  return validKeys(value)\n    .map((k) => buildRecursive(key, value[k], suffix + '[' + k + ']'))\n    .join('&')\n}\n\nexport const toQueryString = (entry: string | Record<string, Primitive>) => {\n  if (!isPlainObject(entry)) {\n    return entry\n  }\n\n  return validKeys(entry)\n    .map((key) => buildRecursive(key, entry[key]))\n    .join('&')\n    .replace(R20, '+')\n}\n\n/**\n * Gives time in miliseconds, but with sub-milisecond precision for Browser\n * and Nodejs\n */\nexport const performanceNow = () => {\n  if (hasProcessHrtime() && getNanoSeconds !== undefined) {\n    const now = getNanoSeconds()\n    if (now !== undefined && loadTime !== undefined) {\n      return (now - loadTime) / 1e6\n    }\n  }\n\n  return Date.now()\n}\n\n/**\n * borrowed from: {@link https://gist.github.com/monsur/706839}\n * XmlHttpRequest's getAllResponseHeaders() method returns a string of response\n * headers according to the format described here:\n * {@link http://www.w3.org/TR/XMLHttpRequest/#the-getallresponseheaders-method}\n * This method parses that string into a user-friendly key/value pair object.\n */\nexport const parseResponseHeaders = (headerStr: string) => {\n  const headers: Record<string, unknown> = {}\n  if (!headerStr) {\n    return headers\n  }\n\n  const headerPairs = headerStr.split('\\u000d\\u000a')\n  for (let i = 0; i < headerPairs.length; i++) {\n    const headerPair = headerPairs[i]\n    // Can't use split() here because it does the wrong thing\n    // if the header value has the string \": \" in it.\n    const index = headerPair.indexOf('\\u003a\\u0020')\n    if (index > 0) {\n      const key = headerPair.substring(0, index).toLowerCase().trim()\n      const val = headerPair.substring(index + 2).trim()\n      headers[key] = val\n    }\n  }\n  return headers\n}\n\nexport const lowerCaseObjectKeys = (obj: Record<string, unknown>) => {\n  return Object\n    .keys(obj)\n    .reduce((target, key) => {\n      target[key.toLowerCase()] = obj[key]\n      return target\n    }, {} as Record<string, unknown>)\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\nexport const assign = Object.assign || function (target: Record<string, unknown>) {\n  for (let i = 1; i < arguments.length; i++) {\n    // eslint-disable-next-line prefer-rest-params\n    const source = arguments[i]\n    for (const key in source) {\n      if (hasOwnProperty.call(source, key)) {\n        target[key] = source[key]\n      }\n    }\n  }\n  return target\n}\n\nconst toString = Object.prototype.toString\nexport const isPlainObject = (value: unknown): value is Record<string, unknown> => {\n  return toString.call(value) === '[object Object]' &&\n    Object.getPrototypeOf(value) === Object.getPrototypeOf({})\n}\n\n/**\n * borrowed from: {@link https://github.com/davidchambers/Base64.js}\n */\nconst CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\nexport const btoa = (input: string) => {\n  let output = ''\n  let map = CHARS\n  const str = String(input)\n  for (\n    // initialize result and counter\n    let block = 0, charCode: number, idx = 0;\n    // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1);\n    // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)\n  ) {\n    charCode = str.charCodeAt(idx += 3 / 4)\n    if (charCode > 0xFF) {\n      throw new Error(\"[Mappersmith] 'btoa' failed: The string to be encoded contains characters outside of the Latin1 range.\")\n    }\n    block = block << 8 | charCode\n  }\n  return output\n}\n","// COMBAK: All of these should not live here, they were moved from typings/index.d.ts\n\nexport interface Headers {\n  readonly [header: string]: string\n}\n\nexport interface Authorization {\n  readonly password: string\n  readonly username: string\n}\n\nexport interface Parameters {\n  readonly auth?: Authorization\n  readonly timeout?: number\n  [param: string]: object | string | number | boolean | undefined\n}\n\nexport type Context = object\n\nexport type RequestGetter = () => Promise<Request>\n\nexport type ResponseGetter = () => Promise<Response>\n\nexport type AbortFn = (error: Error) => void\n\nexport type RenewFn = () => Promise<object>\n\nexport interface MiddlewareDescriptor {\n  /**\n   * @deprecated: Please use prepareRequest instead\n   */\n  request?(request: Request): Promise<Request> | Request\n  /**\n   * @since 2.27.0\n   * Replaced the request method\n   */\n  prepareRequest?(next: RequestGetter, abort: AbortFn): Promise<Request | void>\n  response?(next: ResponseGetter, renew: RenewFn): Promise<Response | object>\n}\n\nexport interface MiddlewareParams {\n  readonly clientId: string\n  readonly context: Context\n  readonly resourceMethod: string\n  readonly resourceName: string\n}\n\nexport type Middleware = (params: MiddlewareParams) => MiddlewareDescriptor\n\ninterface MethodDescriptorParams {\n  allowResourceHostOverride: boolean\n  disableParamsEncode: boolean\n  authAttr: string\n  binary: boolean\n  bodyAttr: string\n  headers: Headers\n  headersAttr: string\n  host: string\n  hostAttr: string\n  method: string\n  middleware: Array<Middleware>\n  middlewares: Array<Middleware>\n  params: Parameters\n  path: string | ((args: Record<string, unknown>) => string)\n  queryParamAlias: Record<string, string>\n  timeoutAttr: string\n}\n\n/**\n * @typedef MethodDescriptor\n * @param {MethodDescriptorParams} params\n *   @param {boolean} params.allowResourceHostOverride\n *   @param {boolean} params.disableParamsEncode\n *   @param {String} params.authAttr - auth attribute name. Default: 'auth'\n *   @param {boolean} params.binary\n *   @param {String} params.bodyAttr - body attribute name. Default: 'body'\n *   @param {Headers} params.headers\n *   @param {String} params.headersAttr - headers attribute name. Default: 'headers'\n *   @param {String} params.host\n *   @param {String} params.hostAttr - host attribute name. Default: 'host'\n *   @param {String} params.method\n *   @param {Middleware[]} params.middleware\n *   @param {Middleware[]} params.middlewares - alias for middleware\n *   @param {Parameters} params.params\n *   @param {String|Function} params.path\n *   @param {Object} params.queryParamAlias\n *   @param {Number} params.timeoutAttr - timeout attribute name. Default: 'timeout'\n */\nexport default class MethodDescriptor {\n  public allowResourceHostOverride: boolean\n  public disableParamsEncode: boolean\n  public authAttr: string\n  public binary: boolean\n  public bodyAttr: string\n  public headers: Headers\n  public headersAttr: string\n  public host: string\n  public hostAttr: string\n  public method: string\n  public middleware: Middleware[]\n  public params: Parameters\n  public path: string | ((args: Parameters) => string)\n  public queryParamAlias: Record<string, string>\n  public timeoutAttr: string\n\n  constructor(params: MethodDescriptorParams) {\n    this.allowResourceHostOverride = params.allowResourceHostOverride || false\n    this.disableParamsEncode = params.disableParamsEncode || false\n    this.binary = params.binary || false\n    this.headers = params.headers\n    this.host = params.host\n    this.method = params.method || 'get'\n    this.params = params.params\n    this.path = params.path\n    this.queryParamAlias = params.queryParamAlias || {}\n\n    this.authAttr = params.authAttr || 'auth'\n    this.bodyAttr = params.bodyAttr || 'body'\n    this.headersAttr = params.headersAttr || 'headers'\n    this.hostAttr = params.hostAttr || 'host'\n    this.timeoutAttr = params.timeoutAttr || 'timeout'\n\n    const resourceMiddleware = params.middleware || params.middlewares || []\n    this.middleware = resourceMiddleware\n  }\n}\n","import MethodDescriptor from './method-descriptor'\nimport { assign } from './utils'\n\n/**\n * @typedef Manifest\n * @param {Object} obj\n *   @param {String} obj.host\n *   @param {boolean} obj.allowResourceHostOverride - default: false\n *   @param {boolean} obj.disableParamsEncode - default: false\n *   @param {Object} obj.gatewayConfigs - default: base values from mappersmith\n *   @param {Object} obj.ignoreGlobalMiddleware - default: false\n *   @param {Object} obj.resources - default: {}\n *   @param {Array}  obj.middleware or obj.middlewares - default: []\n * @param {Object} globalConfigs\n */\nfunction Manifest(obj, { gatewayConfigs = null, middleware = [], context = {} }) {\n  this.host = obj.host\n  this.allowResourceHostOverride = obj.allowResourceHostOverride || false\n  this.disableParamsEncode = obj.disableParamsEncode || false\n  this.bodyAttr = obj.bodyAttr\n  this.headersAttr = obj.headersAttr\n  this.authAttr = obj.authAttr\n  this.timeoutAttr = obj.timeoutAttr\n  this.hostAttr = obj.hostAttr\n  this.clientId = obj.clientId || null\n  this.gatewayConfigs = assign({}, gatewayConfigs, obj.gatewayConfigs)\n  this.resources = obj.resources || {}\n  this.context = context\n\n  const clientMiddleware = obj.middleware || obj.middlewares || []\n\n  // TODO: deprecate obj.middlewares in favor of obj.middleware\n  if (obj.ignoreGlobalMiddleware) {\n    this.middleware = clientMiddleware\n  } else {\n    this.middleware = [...clientMiddleware, ...middleware]\n  }\n}\n\nManifest.prototype = {\n  eachResource(callback) {\n    Object.keys(this.resources).forEach(resourceName => {\n      const methods = this.eachMethod(resourceName, methodName => ({\n        name: methodName,\n        descriptor: this.createMethodDescriptor(resourceName, methodName)\n      }))\n\n      callback(resourceName, methods)\n    })\n  },\n\n  eachMethod(resourceName, callback) {\n    return Object.keys(this.resources[resourceName]).map(callback)\n  },\n\n  createMethodDescriptor(resourceName, methodName) {\n    const definition = this.resources[resourceName][methodName]\n\n    if (!definition || !definition.path) {\n      throw new Error(\n        `[Mappersmith] path is undefined for resource \"${resourceName}\" method \"${methodName}\"`\n      )\n    }\n\n    return new MethodDescriptor(\n      assign(\n        {\n          host: this.host,\n          allowResourceHostOverride: this.allowResourceHostOverride,\n          disableParamsEncode: this.disableParamsEncode,\n          bodyAttr: this.bodyAttr,\n          headersAttr: this.headersAttr,\n          authAttr: this.authAttr,\n          timeoutAttr: this.timeoutAttr,\n          hostAttr: this.hostAttr\n        },\n        definition\n      )\n    )\n  },\n\n  /**\n   * @param {Object} args\n   *   @param {String|Null} args.clientId\n   *   @param {String} args.resourceName\n   *   @param {String} args.resourceMethod\n   *   @param {Object} args.context\n   *   @param {Boolean} args.mockRequest\n   *\n   * @return {Array<Object>}\n   */\n  createMiddleware(args = {}) {\n    const createInstance = middlewareFactory =>\n      assign(\n        {\n          __name: middlewareFactory.name || middlewareFactory.toString(),\n          response(next) {\n            return next()\n          },\n          /**\n           * @since 2.27.0\n           * Replaced the request method\n           */\n          prepareRequest(next) {\n            return this.request ? next().then(req => this.request(req)) : next()\n          }\n        },\n        middlewareFactory(\n          assign(args, {\n            clientId: this.clientId,\n            context: assign({}, this.context)\n          })\n        )\n      )\n\n    const { resourceName: name, resourceMethod: method } = args\n    const resourceMiddleware = this.createMethodDescriptor(name, method).middleware\n    const middlewares = [...resourceMiddleware, ...this.middleware]\n\n    return middlewares.map(createInstance)\n  }\n}\n\nexport default Manifest\n","import MethodDescriptor, { Parameters } from './method-descriptor'\nimport { toQueryString, lowerCaseObjectKeys, assign } from './utils'\nimport type { Primitive } from './utils'\n\nconst REGEXP_DYNAMIC_SEGMENT = /{([^}?]+)\\??}/\nconst REGEXP_OPTIONAL_DYNAMIC_SEGMENT = /\\/?{([^}?]+)\\?}/g\nconst REGEXP_TRAILING_SLASH = /\\/$/\n\nexport interface RequestParams {\n  readonly auth?: Record<string, string>\n  readonly body?: Record<string, string> | string\n  readonly headers?: Headers\n  readonly host?: string\n  readonly params?: Parameters\n  readonly timeout?: number\n  [param: string]: object | string | number | boolean | undefined\n}\n\n/**\n * @typedef Request\n * @param {MethodDescriptor} methodDescriptor\n * @param {RequestParams} requestParams, defaults to an empty object ({})\n */\nexport class Request {\n  public methodDescriptor: MethodDescriptor\n  public requestParams: RequestParams\n\n  constructor(methodDescriptor: MethodDescriptor, requestParams: RequestParams = {}) {\n    this.methodDescriptor = methodDescriptor\n    this.requestParams = requestParams\n  }\n\n  public params() {\n    const params = assign({}, this.methodDescriptor.params, this.requestParams)\n\n    const isParam = (key: string) =>\n      key !== this.methodDescriptor.headersAttr &&\n      key !== this.methodDescriptor.bodyAttr &&\n      key !== this.methodDescriptor.authAttr &&\n      key !== this.methodDescriptor.timeoutAttr &&\n      key !== this.methodDescriptor.hostAttr\n\n    return Object.keys(params).reduce((obj, key) => {\n      if (isParam(key)) {\n        obj[key] = params[key]\n      }\n      return obj\n    }, {} as Parameters)\n  }\n\n  /**\n   * Returns the HTTP method in lowercase\n   */\n  public method() {\n    return this.methodDescriptor.method.toLowerCase()\n  }\n\n  /**\n   * Returns host name without trailing slash\n   * Example: 'http://example.org'\n   */\n  public host() {\n    const { allowResourceHostOverride, hostAttr, host } = this.methodDescriptor\n    const originalHost = allowResourceHostOverride\n      ? this.requestParams[hostAttr] || host || ''\n      : host || ''\n\n    if (typeof originalHost === 'string') {\n      return originalHost.replace(REGEXP_TRAILING_SLASH, '')\n    }\n\n    return ''\n  }\n\n  /**\n   * Returns path with parameters and leading slash.\n   * Example: '/some/path?param1=true'\n   *\n   * @throws {Error} if any dynamic segment is missing.\n   * Example:\n   *  Imagine the path '/some/{name}', the error will be similar to:\n   *    '[Mappersmith] required parameter missing (name), \"/some/{name}\" cannot be resolved'\n   */\n  public path() {\n    const params = this.params()\n\n    let path\n\n    if (typeof this.methodDescriptor.path === 'function') {\n      path = this.methodDescriptor.path(params)\n    } else {\n      path = this.methodDescriptor.path\n    }\n\n    if (path[0] !== '/') {\n      path = `/${path}`\n    }\n\n    // RegExp with 'g'-flag is stateful, therefore defining it locally\n    const regexp = new RegExp(REGEXP_DYNAMIC_SEGMENT, 'g')\n\n    const dynamicSegmentKeys = []\n    let match\n    while ((match = regexp.exec(path)) !== null) {\n      dynamicSegmentKeys.push(match[1])\n    }\n\n    for (const key of dynamicSegmentKeys) {\n      const pattern = new RegExp(`{${key}\\\\??}`, 'g')\n      const value = params[key]\n      if (value != null && typeof value !== 'object') {\n        const valueToReplace = this.methodDescriptor.disableParamsEncode ? value.toString() : encodeURIComponent(value)\n        path = path.replace(pattern, valueToReplace)\n        delete params[key]\n      }\n    }\n\n    path = path.replace(REGEXP_OPTIONAL_DYNAMIC_SEGMENT, '')\n\n    const missingDynamicSegmentMatch = path.match(REGEXP_DYNAMIC_SEGMENT)\n    if (missingDynamicSegmentMatch) {\n      throw new Error(\n        `[Mappersmith] required parameter missing (${missingDynamicSegmentMatch[1]}), \"${path}\" cannot be resolved`\n      )\n    }\n\n    const aliasedParams = Object.keys(params).reduce((aliased, key) => {\n      const aliasedKey = this.methodDescriptor.queryParamAlias[key] || key\n      const value = params[key]\n      if (value != null && typeof value !== 'object') {\n        aliased[aliasedKey] = value\n      }\n      return aliased\n    }, {} as Record<string, Primitive>)\n\n    const queryString = toQueryString(aliasedParams)\n    if (queryString.length !== 0) {\n      const hasQuery = path.includes('?')\n      path += `${hasQuery ? '&' : '?'}${queryString}`\n    }\n\n    return path\n  }\n\n  /**\n   * Returns the template path, without params, before interpolation.\n   * If path is a function, returns the result of request.path()\n   * Example: '/some/{param}/path'\n   */\n  public pathTemplate() {\n    let path = this.methodDescriptor.path\n\n    if (typeof this.methodDescriptor.path !== 'function' && this.methodDescriptor.path[0] !== '/') {\n      path = `/${path}`\n    }\n\n    return path\n  }\n\n  /**\n   * Returns the full URL\n   * Example: http://example.org/some/path?param1=true\n   *\n   */\n  public url() {\n    return `${this.host()}${this.path()}`\n  }\n\n  /**\n   * Returns an object with the headers. Header names are converted to\n   * lowercase\n   */\n  public headers() {\n    return lowerCaseObjectKeys(\n      assign(\n        {},\n        this.methodDescriptor.headers,\n        this.requestParams?.[this.methodDescriptor.headersAttr]\n      )\n    )\n  }\n\n  /**\n   * Utility method to get a header value by name\n   */\n  public header(name: string) {\n    return this.headers()[name.toLowerCase()]\n  }\n\n  public body() {\n    return this.requestParams?.[this.methodDescriptor.bodyAttr]\n  }\n\n  public auth() {\n    return this.requestParams?.[this.methodDescriptor.authAttr]\n  }\n\n  public timeout() {\n    return this.requestParams?.[this.methodDescriptor.timeoutAttr]\n  }\n\n  /**\n   * Enhances current request returning a new Request\n   * @param {RequestParams} extras\n   *   @param {Object} extras.auth - it will replace the current auth\n   *   @param {String|Object} extras.body - it will replace the current body\n   *   @param {Headers} extras.headers - it will be merged with current headers\n   *   @param {String} extras.host - it will replace the current timeout\n   *   @param {Parameters} extras.params - it will be merged with current params\n   *   @param {Number} extras.timeout - it will replace the current timeout\n   */\n  public enhance(extras: RequestParams) {\n    const authKey = this.methodDescriptor.authAttr\n    const bodyKey = this.methodDescriptor.bodyAttr\n    const headerKey = this.methodDescriptor.headersAttr\n    const hostKey = this.methodDescriptor.hostAttr\n    const timeoutKey = this.methodDescriptor.timeoutAttr\n\n    const requestParams = assign({}, this.requestParams, extras.params)\n    requestParams[headerKey] = assign({}, this.requestParams?.[headerKey], extras.headers)\n\n    extras.auth && (requestParams[authKey] = extras.auth)\n    extras.body && (requestParams[bodyKey] = extras.body)\n    extras.host && (requestParams[hostKey] = extras.host)\n    extras.timeout && (requestParams[timeoutKey] = extras.timeout)\n\n    return new Request(this.methodDescriptor, requestParams)\n  }\n\n  /**\n   * Is the request expecting a binary response?\n   */\n  public isBinary() {\n    return this.methodDescriptor.binary\n  }\n}\n\nexport default Request\n","import Manifest from './manifest'\nimport Request from './request'\nimport { assign } from './utils'\n\n/**\n * @typedef ClientBuilder\n * @param {Object} manifest - manifest definition with at least the `resources` key\n * @param {Function} GatewayClassFactory - factory function that returns a gateway class\n */\nfunction ClientBuilder(manifest, GatewayClassFactory, configs) {\n  if (!manifest) {\n    throw new Error(\n      `[Mappersmith] invalid manifest (${manifest})`\n    )\n  }\n\n  if (!GatewayClassFactory || !GatewayClassFactory()) {\n    throw new Error(\n      '[Mappersmith] gateway class not configured (configs.gateway)'\n    )\n  }\n\n  this.Promise = configs.Promise\n  this.manifest = new Manifest(manifest, configs)\n  this.GatewayClassFactory = GatewayClassFactory\n  this.maxMiddlewareStackExecutionAllowed = configs.maxMiddlewareStackExecutionAllowed\n}\n\nClientBuilder.prototype = {\n  build() {\n    const client = { _manifest: this.manifest }\n\n    this.manifest.eachResource((name, methods) => {\n      client[name] = this.buildResource(name, methods)\n    })\n\n    return client\n  },\n\n  buildResource(resourceName, methods) {\n    return methods.reduce((resource, method) => assign(resource, {\n      [method.name]: (requestParams) => {\n        const request = new Request(method.descriptor, requestParams)\n        return this.invokeMiddlewares(resourceName, method.name, request)\n      }\n    }), {})\n  },\n\n  invokeMiddlewares(resourceName, resourceMethod, initialRequest) {\n    const middleware = this.manifest.createMiddleware({ resourceName, resourceMethod })\n    const GatewayClass = this.GatewayClassFactory()\n    const gatewayConfigs = this.manifest.gatewayConfigs\n    const requestPhaseFailureContext = {\n      middleware: null,\n      returnedInvalidRequest: false,\n      abortExecution: false\n    }\n\n    const getInitialRequest = () => this.Promise.resolve(initialRequest)\n    const chainRequestPhase = (next, middleware) => () => {\n      const abort = (error) => {\n        requestPhaseFailureContext.abortExecution = true\n        throw error\n      }\n\n      return this.Promise\n        .resolve()\n        .then(() => middleware.prepareRequest(next, abort))\n        .then(request => {\n          if (request instanceof Request) {\n            return request\n          }\n\n          requestPhaseFailureContext.returnedInvalidRequest = true\n          const typeValue = typeof request\n          const prettyType = (typeValue === 'object' || typeValue === 'function')\n            ? request.name || typeValue\n            : typeValue\n\n          throw new Error(`[Mappersmith] middleware \"${middleware.__name}\" should return \"Request\" but returned \"${prettyType}\"`)\n        })\n        .catch(e => {\n          requestPhaseFailureContext.middleware = middleware.__name\n          throw e\n        })\n    }\n\n    const prepareRequest = middleware.reduce(chainRequestPhase, getInitialRequest)\n    let executions = 0\n\n    const executeMiddlewareStack = () => prepareRequest()\n      .catch(e => {\n        const { returnedInvalidRequest, abortExecution, middleware } = requestPhaseFailureContext\n        if (returnedInvalidRequest || abortExecution) {\n          throw e\n        }\n\n        const error = new Error(`[Mappersmith] middleware \"${middleware}\" failed in the request phase: ${e.message}`)\n        error.stack = e.stack\n        throw error\n      })\n      .then(finalRequest => {\n        executions++\n\n        if (executions > this.maxMiddlewareStackExecutionAllowed) {\n          throw new Error(\n            `[Mappersmith] infinite loop detected (middleware stack invoked ${executions} times). Check the use of \"renew\" in one of the middleware.`\n          )\n        }\n\n        const renew = executeMiddlewareStack\n        const chainResponsePhase = (next, middleware) => () => middleware.response(next, renew)\n        const callGateway = () => new GatewayClass(finalRequest, gatewayConfigs).call()\n        const execute = middleware.reduce(chainResponsePhase, callGateway)\n        return execute()\n      })\n\n    return new this.Promise((resolve, reject) => {\n      executeMiddlewareStack()\n        .then(response => resolve(response))\n        .catch(reject)\n    })\n  }\n}\n\nexport default ClientBuilder\n","/* global VERSION */\nimport ClientBuilder from './client-builder'\nimport { assign } from './utils'\n\nexport const version = VERSION\n\nexport const configs = {\n  context: {},\n  middleware: [],\n  Promise: typeof Promise === 'function' ? Promise : null,\n  fetch: typeof fetch === 'function' ? fetch : null, // eslint-disable-line no-undef\n\n  /**\n   * The maximum amount of executions allowed before it is considered an infinite loop.\n   * In the response phase of middleware, it's possible to execute a function called \"renew\",\n   * which can be used to rerun the middleware stack. This feature is useful in some scenarios,\n   * for example, re-fetching an invalid access token.\n\n   * This configuration is used to detect infinite loops, don't increase this value too much\n   * @default 2\n   */\n  maxMiddlewareStackExecutionAllowed: 2,\n\n  /**\n   * Gateway implementation, it defaults to \"lib/gateway/xhr\" for browsers and\n   * \"lib/gateway/http\" for node\n   */\n  gateway: null,\n  gatewayConfigs: {\n    /**\n     * Setting this option will fake PUT, PATCH and DELETE requests with a HTTP POST. It will\n     * add \"_method\" and \"X-HTTP-Method-Override\" with the original requested method\n     * @default false\n     */\n    emulateHTTP: false,\n\n    /**\n     * Setting this option will return HTTP status 408 (Request Timeout) when a request times\n     * out. When \"false\", HTTP status 400 (Bad Request) will be used instead.\n     * @default false\n     */\n    enableHTTP408OnTimeouts: false,\n\n    XHR: {\n      /**\n       * Indicates whether or not cross-site Access-Control requests should be made using credentials\n       * such as cookies, authorization headers or TLS client certificates.\n       * Setting withCredentials has no effect on same-site requests\n       *\n       * https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n       *\n       * @default false\n       */\n      withCredentials: false,\n\n      /**\n       * For additional configurations to the XMLHttpRequest object.\n       * @param {XMLHttpRequest} xhr\n       * @default null\n       */\n      configure: null\n    },\n\n    HTTP: {\n      /**\n       * Enable this option to evaluate timeout on entire request durations,\n       * including DNS resolution and socket connection.\n       *\n       * See original nodejs issue: https://github.com/nodejs/node/pull/8101\n       *\n       * @default false\n       */\n      useSocketConnectionTimeout: false,\n      /**\n       * For additional configurations to the http/https module\n       * For http: https://nodejs.org/api/http.html#http_http_request_options_callback\n       * For https: https://nodejs.org/api/https.html#https_https_request_options_callback\n       *\n       * @param {object} options\n       * @default null\n       */\n      configure: null,\n      onRequestWillStart: null,\n      onRequestSocketAssigned: null,\n      onSocketLookup: null,\n      onSocketConnect: null,\n      onSocketSecureConnect: null,\n      onResponseReadable: null,\n      onResponseEnd: null\n    },\n\n    Fetch: {\n      /**\n       * Indicates whether the user agent should send cookies from the other domain in the case of cross-origin\n       * requests. This is similar to XHR’s withCredentials flag, but with three available values (instead of two):\n       *\n       * \"omit\": Never send cookies.\n       * \"same-origin\": Only send cookies if the URL is on the same origin as the calling script.\n       * \"include\": Always send cookies, even for cross-origin calls.\n       *\n       * https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials\n       *\n       * @default \"omit\"\n       */\n      credentials: 'omit'\n    }\n  }\n}\n\n/**\n * @deprecated Shouldn't be used, not safe for concurrent use.\n * @param {Object} context\n */\nexport const setContext = (context) => {\n  console.warn('The use of setContext is deprecated - you need to find another way to pass data between your middlewares.')\n  configs.context = assign(configs.context, context)\n}\n\n/**\n * @param {Object} manifest\n */\nexport default function forge(manifest) {\n  const GatewayClassFactory = () => configs.gateway\n  return new ClientBuilder(manifest, GatewayClassFactory, configs).build()\n}\n","/* eslint-disable @typescript-eslint/no-var-requires */\nvar lib = require('./mappersmith')\nvar _process, defaultGateway\n\n// Prevents webpack to load the nodejs processs polyfill\n// eslint-disable-next-line no-eval, no-empty\ntry { _process = eval('typeof process === \"object\" ? process : undefined') } catch (e) {}\n\nif (typeof XMLHttpRequest !== 'undefined') {\n  // For browsers use XHR adapter\n  defaultGateway = require('./gateway/xhr').default\n} else if (typeof _process !== 'undefined') {\n  // For node use HTTP adapter\n  defaultGateway = require('./gateway/http').default\n}\n\nlib.configs.gateway = defaultGateway\nmodule.exports = lib\n","/* eslint-disable no-empty */\nimport { lowerCaseObjectKeys, assign } from './utils'\n\nconst REGEXP_CONTENT_TYPE_JSON = /^application\\/(json|.*\\+json)/\n\n/**\n * @typedef Response\n * @param {Request} originalRequest, for auth it hides the password\n * @param {Integer} responseStatus\n * @param {String} responseData, defaults to null\n * @param {Object} responseHeaders, defaults to an empty object ({})\n * @param {Array<Error>} errors, defaults to an empty array ([])\n */\nfunction Response(originalRequest, responseStatus, responseData, responseHeaders, errors) {\n  if (originalRequest.requestParams && originalRequest.requestParams.auth) {\n    const maskedAuth = assign({}, originalRequest.requestParams.auth, { password: '***' })\n    this.originalRequest = originalRequest.enhance({ auth: maskedAuth })\n  } else {\n    this.originalRequest = originalRequest\n  }\n\n  this.responseStatus = responseStatus\n  this.responseData = responseData !== undefined ? responseData : null\n  this.responseHeaders = responseHeaders || {}\n  this.errors = errors || []\n  this.timeElapsed = null\n}\n\nResponse.prototype = {\n  /**\n   * @return {Request}\n   */\n  request() {\n    return this.originalRequest\n  },\n\n  /**\n   * @return {Integer}\n   */\n  status() {\n    // IE sends 1223 instead of 204\n    if (this.responseStatus === 1223) {\n      return 204\n    }\n\n    return this.responseStatus\n  },\n\n  /**\n   * Returns true if status is greater or equal 200 or lower than 400\n   *\n   * @return {Boolean}\n   */\n  success() {\n    const status = this.status()\n    return status >= 200 && status < 400\n  },\n\n  /**\n   * Returns an object with the headers. Header names are converted to\n   * lowercase\n   *\n   * @return {Object}\n   */\n  headers() {\n    return lowerCaseObjectKeys(this.responseHeaders)\n  },\n\n  /**\n   * Utility method to get a header value by name\n   *\n   * @param {String} name\n   *\n   * @return {String|Undefined}\n   */\n  header(name) {\n    return this.headers()[name.toLowerCase()]\n  },\n\n  /**\n   * Returns the original response data\n   */\n  rawData() {\n    return this.responseData\n  },\n\n  /**\n   * Returns the response data, if \"Content-Type\" is \"application/json\"\n   * it parses the response and returns an object\n   *\n   * @return {String|Object}\n   */\n  data() {\n    let data = this.responseData\n\n    if (this.isContentTypeJSON()) {\n      try { data = JSON.parse(this.responseData) } catch (e) {}\n    }\n\n    return data\n  },\n\n  isContentTypeJSON() {\n    return REGEXP_CONTENT_TYPE_JSON.test(this.headers()['content-type'])\n  },\n\n  /**\n   * Returns the last error instance that caused the request to fail\n   *\n   * @return {Error|null}\n   */\n  error() {\n    const lastError = this.errors[this.errors.length - 1] || null\n    if (typeof lastError === 'string') {\n      return new Error(lastError)\n    }\n\n    return lastError\n  },\n\n  /**\n   * Enhances current Response returning a new Response\n   *\n   * @param {Object} extras\n   *   @param {Integer} extras.status - it will replace the current status\n   *   @param {String} extras.rawData - it will replace the current rawData\n   *   @param {Object} extras.headers - it will be merged with current headers\n   *   @param {Error} extras.error    - it will be added to the list of errors\n   *\n   * @return {Response}\n   */\n  enhance(extras) {\n    const enhancedResponse = new Response(\n      this.request(),\n      extras.status || this.status(),\n      extras.rawData || this.rawData(),\n      assign({}, this.headers(), extras.headers),\n      extras.error ? [...this.errors, extras.error] : [...this.errors]\n    )\n    enhancedResponse.timeElapsed = this.timeElapsed\n\n    return enhancedResponse\n  }\n}\n\nexport default Response\n","export const isTimeoutError = (e) => {\n  return e && e.name === 'TimeoutError'\n}\n\nexport const createTimeoutError = (message) => {\n  const error = new Error(message)\n  error.name = 'TimeoutError'\n  return error\n}\n","import { performanceNow, assign, toQueryString, isPlainObject } from './utils'\nimport { configs as defaultConfigs } from './mappersmith'\nimport Response from './response'\nimport { isTimeoutError } from './gateway/timeout-error'\n\nconst REGEXP_EMULATE_HTTP = /^(delete|put|patch)/i\n\nfunction Gateway(request, configs = {}) {\n  this.request = request\n  this.configs = configs\n  this.successCallback = function () {\n    return undefined\n  }\n  this.failCallback = function () {\n    return undefined\n  }\n}\n\nGateway.extends = (methods) => assign({}, Gateway.prototype, methods)\n\nGateway.prototype = {\n  options() {\n    return this.configs\n  },\n\n  shouldEmulateHTTP() {\n    return this.options().emulateHTTP &&\n      REGEXP_EMULATE_HTTP.test(this.request.method())\n  },\n\n  call() {\n    const timeStart = performanceNow()\n    return new defaultConfigs.Promise((resolve, reject) => {\n      this.successCallback = (response) => {\n        response.timeElapsed = performanceNow() - timeStart\n        resolve(response)\n      }\n\n      this.failCallback = (response) => {\n        response.timeElapsed = performanceNow() - timeStart\n        reject(response)\n      }\n\n      try {\n        this[this.request.method()].apply(this, arguments)\n      } catch (e) {\n        this.dispatchClientError(e.message, e)\n      }\n    })\n  },\n\n  dispatchResponse(response) {\n    response.success()\n      ? this.successCallback(response)\n      : this.failCallback(response)\n  },\n\n  dispatchClientError(message, error) {\n    if (isTimeoutError(error) && this.options().enableHTTP408OnTimeouts) {\n      this.failCallback(new Response(this.request, 408, message, {}, [error]))\n    } else {\n      this.failCallback(new Response(this.request, 400, message, {}, [error]))\n    }\n  },\n\n  prepareBody(method, headers) {\n    let body = this.request.body()\n\n    if (this.shouldEmulateHTTP()) {\n      body = body || {}\n      isPlainObject(body) && (body._method = method)\n      headers['x-http-method-override'] = method\n    }\n\n    const bodyString = toQueryString(body)\n\n    if (bodyString) {\n      // If it's not simple, let the browser (or the user) set it\n      if (isPlainObject(body)) {\n        headers['content-type'] = 'application/x-www-form-urlencoded;charset=utf-8'\n      }\n    }\n\n    return bodyString\n  }\n}\n\nexport default Gateway\n","import Gateway from '../gateway'\nimport Response from '../response'\nimport { assign, parseResponseHeaders, btoa } from '../utils'\nimport { createTimeoutError } from './timeout-error'\n\nconst toBase64 = window.btoa || btoa\n\nfunction XHR() {\n  Gateway.apply(this, arguments)\n}\n\nXHR.prototype = Gateway.extends({\n  get() {\n    const xmlHttpRequest = this.createXHR()\n    xmlHttpRequest.open('GET', this.request.url(), true)\n    this.setHeaders(xmlHttpRequest, {})\n    this.configureTimeout(xmlHttpRequest)\n    this.configureBinary(xmlHttpRequest)\n    xmlHttpRequest.send()\n  },\n\n  head() {\n    const xmlHttpRequest = this.createXHR()\n    xmlHttpRequest.open('HEAD', this.request.url(), true)\n    this.setHeaders(xmlHttpRequest, {})\n    this.configureTimeout(xmlHttpRequest)\n    this.configureBinary(xmlHttpRequest)\n    xmlHttpRequest.send()\n  },\n\n  post() {\n    this.performRequest('post')\n  },\n\n  put() {\n    this.performRequest('put')\n  },\n\n  patch() {\n    this.performRequest('patch')\n  },\n\n  delete() {\n    this.performRequest('delete')\n  },\n\n  configureBinary(xmlHttpRequest) {\n    if (this.request.isBinary()) {\n      xmlHttpRequest.responseType = 'blob'\n    }\n  },\n\n  configureTimeout(xmlHttpRequest) {\n    this.canceled = false\n    this.timer = null\n\n    const timeout = this.request.timeout()\n\n    if (timeout) {\n      xmlHttpRequest.timeout = timeout\n      xmlHttpRequest.addEventListener('timeout', () => {\n        this.canceled = true\n        clearTimeout(this.timer)\n        const error = createTimeoutError(`Timeout (${timeout}ms)`)\n        this.dispatchClientError(error.message, error)\n      })\n\n      // PhantomJS doesn't support timeout for XMLHttpRequest\n      this.timer = setTimeout(() => {\n        this.canceled = true\n        const error = createTimeoutError(`Timeout (${timeout}ms)`)\n        this.dispatchClientError(error.message, error)\n      }, timeout + 1)\n    }\n  },\n\n  configureCallbacks(xmlHttpRequest) {\n    xmlHttpRequest.addEventListener('load', () => {\n      if (this.canceled) {\n        return\n      }\n\n      clearTimeout(this.timer)\n      this.dispatchResponse(this.createResponse(xmlHttpRequest))\n    })\n\n    xmlHttpRequest.addEventListener('error', (e) => {\n      if (this.canceled) {\n        return\n      }\n\n      clearTimeout(this.timer)\n      const guessedErrorCause = e\n        ? e.message || e.name\n        : xmlHttpRequest.responseText\n\n      const errorMessage = 'Network error'\n      const enhancedMessage = guessedErrorCause ? `: ${guessedErrorCause}` : ''\n      const error = new Error(`${errorMessage}${enhancedMessage}`)\n      this.dispatchClientError(errorMessage, error)\n    })\n\n    const xhrOptions = this.options().XHR\n    if (xhrOptions.withCredentials) {\n      xmlHttpRequest.withCredentials = true\n    }\n\n    if (xhrOptions.configure) {\n      xhrOptions.configure(xmlHttpRequest)\n    }\n  },\n\n  performRequest(method) {\n    const requestMethod = this.shouldEmulateHTTP() ? 'post' : method\n    const xmlHttpRequest = this.createXHR()\n    xmlHttpRequest.open(requestMethod.toUpperCase(), this.request.url(), true)\n\n    const customHeaders = {}\n    const body = this.prepareBody(method, customHeaders)\n    this.setHeaders(xmlHttpRequest, customHeaders)\n    this.configureTimeout(xmlHttpRequest)\n    this.configureBinary(xmlHttpRequest)\n\n    const args = []\n    body && args.push(body)\n\n    xmlHttpRequest.send.apply(xmlHttpRequest, args)\n  },\n\n  createResponse(xmlHttpRequest) {\n    const status = xmlHttpRequest.status\n    const data = this.request.isBinary() ? xmlHttpRequest.response : xmlHttpRequest.responseText\n    const responseHeaders = parseResponseHeaders(xmlHttpRequest.getAllResponseHeaders())\n    return new Response(\n      this.request,\n      status,\n      data,\n      responseHeaders\n    )\n  },\n\n  setHeaders(xmlHttpRequest, customHeaders) {\n    const auth = this.request.auth()\n    if (auth) {\n      const username = auth.username || ''\n      const password = auth.password || ''\n      customHeaders['authorization'] = `Basic ${toBase64(`${username}:${password}`)}`\n    }\n\n    const headers = assign(customHeaders, this.request.headers())\n    Object\n      .keys(headers)\n      .forEach((headerName) => {\n        xmlHttpRequest.setRequestHeader(headerName, headers[headerName])\n      })\n  },\n\n  createXHR() {\n    const xmlHttpRequest = new XMLHttpRequest() // eslint-disable-line no-undef\n    this.configureCallbacks(xmlHttpRequest)\n    return xmlHttpRequest\n  }\n})\n\nexport default XHR\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n"],"sourceRoot":""}